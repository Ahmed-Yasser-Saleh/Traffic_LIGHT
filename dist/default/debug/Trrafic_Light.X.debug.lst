

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Oct 12 17:23:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 23/03/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4620 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   001E6C                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _port_reg
    74   001E6C  80                 	db	128
    75   001E6D  0F                 	db	15
    76   001E6E  81                 	db	129
    77   001E6F  0F                 	db	15
    78   001E70  82                 	db	130
    79   001E71  0F                 	db	15
    80   001E72  83                 	db	131
    81   001E73  0F                 	db	15
    82   001E74  84                 	db	132
    83   001E75  0F                 	db	15
    84                           
    85                           ;initializer for _lat_reg
    86   001E76  89                 	db	137
    87   001E77  0F                 	db	15
    88   001E78  8A                 	db	138
    89   001E79  0F                 	db	15
    90   001E7A  8B                 	db	139
    91   001E7B  0F                 	db	15
    92   001E7C  8C                 	db	140
    93   001E7D  0F                 	db	15
    94   001E7E  8D                 	db	141
    95   001E7F  0F                 	db	15
    96                           
    97                           ;initializer for _tris_reg
    98   001E80  92                 	db	146
    99   001E81  0F                 	db	15
   100   001E82  93                 	db	147
   101   001E83  0F                 	db	15
   102   001E84  94                 	db	148
   103   001E85  0F                 	db	15
   104   001E86  95                 	db	149
   105   001E87  0F                 	db	15
   106   001E88  96                 	db	150
   107   001E89  0F                 	db	15
   108                           
   109                           ;initializer for _lcd_4bit
   110   001E8A  13                 	db	19
   111   001E8B  23                 	db	35
   112   001E8C  2B                 	db	43
   113   001E8D  33                 	db	51
   114   001E8E  3B                 	db	59
   115   001E8F  1B                 	db	27
   116                           
   117                           ;initializer for _segment_1
   118   001E90  02                 	db	2
   119   001E91  0A                 	db	10
   120   001E92  12                 	db	18
   121   001E93  1A                 	db	26
   122   001E94  00                 	db	0
   123                           
   124                           ;initializer for _segment_enable_2
   125   001E95  8B                 	db	139
   126                           
   127                           ;initializer for _segment_enable_1
   128   001E96  83                 	db	131
   129                           
   130                           ;initializer for _led_red
   131   001E97  20                 	db	32
   132                           
   133                           ;initializer for _led_yellow
   134   001E98  10                 	db	16
   135   000000                     _PORTE	set	3972
   136   000000                     _PORTD	set	3971
   137   000000                     _PORTC	set	3970
   138   000000                     _PORTB	set	3969
   139   000000                     _PORTA	set	3968
   140   000000                     _LATA	set	3977
   141   000000                     _TRISA	set	3986
   142   000000                     _TRISE	set	3990
   143   000000                     _TRISD	set	3989
   144   000000                     _TRISC	set	3988
   145   000000                     _TRISB	set	3987
   146   000000                     _LATE	set	3981
   147   000000                     _LATD	set	3980
   148   000000                     _LATC	set	3979
   149   000000                     _LATB	set	3978
   150                           
   151                           	psect	smallconst
   152   001000                     __psmallconst:
   153                           	callstack 0
   154   001000  00                 	db	0
   155   001001                     STR_6:
   156   001001  20                 	db	32
   157   001002  47                 	db	71	;'G'
   158   001003  4F                 	db	79	;'O'
   159   001004  20                 	db	32
   160   001005  20                 	db	32
   161   001006  20                 	db	32
   162   001007  20                 	db	32
   163   001008  00                 	db	0
   164   001009                     STR_5:
   165   001009  52                 	db	82	;'R'
   166   00100A  45                 	db	69	;'E'
   167   00100B  41                 	db	65	;'A'
   168   00100C  44                 	db	68	;'D'
   169   00100D  59                 	db	89	;'Y'
   170   00100E  21                 	db	33
   171   00100F  21                 	db	33
   172   001010  00                 	db	0
   173   001011                     STR_4:
   174   001011  53                 	db	83	;'S'
   175   001012  54                 	db	84	;'T'
   176   001013  4F                 	db	79	;'O'
   177   001014  50                 	db	80	;'P'
   178   001015  00                 	db	0
   179   001016                     STR_1:
   180   001016  25                 	db	37
   181   001017  69                 	db	105	;'i'
   182   001018  00                 	db	0
   183   001019  00                 	db	0	; dummy byte at the end
   184   000000                     
   185                           ; #config settings
   186                           
   187                           	psect	cinit
   188   001E32                     __pcinit:
   189                           	callstack 0
   190   001E32                     start_initialization:
   191                           	callstack 0
   192   001E32                     __initialization:
   193                           	callstack 0
   194                           
   195                           ; Initialize objects allocated to COMRAM (45 bytes)
   196                           ; load TBLPTR registers with __pidataCOMRAM
   197   001E32  0E6C               	movlw	low __pidataCOMRAM
   198   001E34  6EF6               	movwf	tblptrl,c
   199   001E36  0E1E               	movlw	high __pidataCOMRAM
   200   001E38  6EF7               	movwf	tblptrh,c
   201   001E3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   202   001E3C  6EF8               	movwf	tblptru,c
   203   001E3E  EE00  F001         	lfsr	0,__pdataCOMRAM
   204   001E42  EE10 F02D          	lfsr	1,45
   205   001E46                     copy_data0:
   206   001E46  0009               	tblrd		*+
   207   001E48  CFF5 FFEE          	movff	tablat,postinc0
   208   001E4C  50E5               	movf	postdec1,w,c
   209   001E4E  50E1               	movf	fsr1l,w,c
   210   001E50  E1FA               	bnz	copy_data0
   211                           
   212                           ; Clear objects allocated to COMRAM (28 bytes)
   213   001E52  EE00  F052         	lfsr	0,__pbssCOMRAM
   214   001E56  0E1C               	movlw	28
   215   001E58                     clear_0:
   216   001E58  6AEE               	clrf	postinc0,c
   217   001E5A  06E8               	decf	wreg,f,c
   218   001E5C  E1FD               	bnz	clear_0
   219   001E5E                     end_of_initialization:
   220                           	callstack 0
   221   001E5E                     __end_of__initialization:
   222                           	callstack 0
   223   001E5E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   224   001E60  6EF8               	movwf	tblptru,c
   225   001E62  0E10               	movlw	high __Lsmallconst
   226   001E64  6EF7               	movwf	tblptrh,c
   227   001E66  0100               	movlb	0
   228   001E68  EF0D  F008         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   000052                     __pbssCOMRAM:
   232                           	callstack 0
   233   000052                     	ds	11
   234   00005D                     	ds	6
   235   000063                     	ds	4
   236   000067                     _t_delay:
   237                           	callstack 0
   238   000067                     	ds	1
   239   000068                     _x:
   240                           	callstack 0
   241   000068                     	ds	1
   242   000069                     Led_Toggle@F3063:
   243                           	callstack 0
   244   000069                     	ds	1
   245   00006A                     Led_Turn_Off@F3058:
   246                           	callstack 0
   247   00006A                     	ds	1
   248   00006B                     Led_Turn_On@F3053:
   249                           	callstack 0
   250   00006B                     	ds	1
   251   00006C                     Led_initialize@F3048:
   252                           	callstack 0
   253   00006C                     	ds	1
   254   00006D                     _led_green:
   255                           	callstack 0
   256   00006D                     	ds	1
   257                           
   258                           	psect	dataCOMRAM
   259   000001                     __pdataCOMRAM:
   260                           	callstack 0
   261   000001                     _port_reg:
   262                           	callstack 0
   263   000001                     	ds	10
   264   00000B                     _lat_reg:
   265                           	callstack 0
   266   00000B                     	ds	10
   267   000015                     _tris_reg:
   268                           	callstack 0
   269   000015                     	ds	10
   270   00001F                     _lcd_4bit:
   271                           	callstack 0
   272   00001F                     	ds	6
   273   000025                     _segment_1:
   274                           	callstack 0
   275   000025                     	ds	5
   276   00002A                     _segment_enable_2:
   277                           	callstack 0
   278   00002A                     	ds	1
   279   00002B                     _segment_enable_1:
   280                           	callstack 0
   281   00002B                     	ds	1
   282   00002C                     _led_red:
   283                           	callstack 0
   284   00002C                     	ds	1
   285   00002D                     _led_yellow:
   286                           	callstack 0
   287   00002D                     	ds	1
   288                           
   289                           	psect	cstackCOMRAM
   290   00002E                     __pcstackCOMRAM:
   291                           	callstack 0
   292   00002E                     ?___awdiv:
   293                           	callstack 0
   294   00002E                     ?___awmod:
   295                           	callstack 0
   296   00002E                     gpio_pin_direction_intialize@Pin_Config:
   297                           	callstack 0
   298   00002E                     gpio_pin_write_logic@Pin_Config:
   299                           	callstack 0
   300   00002E                     ___awdiv@dividend:
   301                           	callstack 0
   302   00002E                     ___awmod@dividend:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x0
   306   00002E                     	ds	2
   307   000030                     ??_gpio_pin_direction_intialize:
   308   000030                     gpio_pin_write_logic@logic:
   309                           	callstack 0
   310   000030                     ___awdiv@divisor:
   311                           	callstack 0
   312   000030                     ___awmod@divisor:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x2
   316   000030                     	ds	1
   317   000031                     ??_gpio_pin_write_logic:
   318                           
   319                           ; 1 bytes @ 0x3
   320   000031                     	ds	1
   321   000032                     ___awdiv@counter:
   322                           	callstack 0
   323   000032                     ___awmod@counter:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x4
   327   000032                     	ds	1
   328   000033                     ___awdiv@sign:
   329                           	callstack 0
   330   000033                     ___awmod@sign:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x5
   334   000033                     	ds	1
   335   000034                     ___awdiv@quotient:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x6
   339   000034                     	ds	2
   340   000036                     gpio_pin_direction_intialize@ret:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x8
   344   000036                     	ds	1
   345   000037                     gpio_pin_write_logic@ret:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x9
   349   000037                     	ds	1
   350   000038                     segment_write_number@segment:
   351                           	callstack 0
   352   000038                     send_4_bit_enable@lcd:
   353                           	callstack 0
   354   000038                     send_4_bit_help@lcd:
   355                           	callstack 0
   356   000038                     Led_Turn_On@led:
   357                           	callstack 0
   358   000038                     Led_Turn_Off@led:
   359                           	callstack 0
   360   000038                     gpio_pin_intialize@Pin_Config:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0xA
   364   000038                     	ds	2
   365   00003A                     ??_gpio_pin_intialize:
   366   00003A                     ??_Led_Turn_On:
   367   00003A                     ??_Led_Turn_Off:
   368   00003A                     segment_write_number@num:
   369                           	callstack 0
   370   00003A                     send_4_bit_enable@ret:
   371                           	callstack 0
   372   00003A                     send_4_bit_help@data_command:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0xC
   376   00003A                     	ds	1
   377   00003B                     send_4_bit_help@ret:
   378                           	callstack 0
   379   00003B                     Led_Turn_On@led_pin:
   380                           	callstack 0
   381   00003B                     Led_Turn_Off@led_pin:
   382                           	callstack 0
   383   00003B                     gpio_pin_intialize@ret:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0xD
   387   00003B                     	ds	1
   388   00003C                     segment_pin_initialize@segment:
   389                           	callstack 0
   390   00003C                     send_4_bit_command@lcd:
   391                           	callstack 0
   392   00003C                     send_4_bit_char_data@lcd:
   393                           	callstack 0
   394   00003C                     Led_initialize@led:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0xE
   398   00003C                     	ds	2
   399   00003E                     ??_Led_initialize:
   400   00003E                     send_4_bit_command@command:
   401                           	callstack 0
   402   00003E                     send_4_bit_char_data@data:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x10
   406   00003E                     	ds	1
   407   00003F                     send_4_bit_command@ret:
   408                           	callstack 0
   409   00003F                     send_4_bit_char_data@ret:
   410                           	callstack 0
   411   00003F                     Led_initialize@led_pin:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x11
   415   00003F                     	ds	1
   416   000040                     lcd_pins_4_initialize@lcd:
   417                           	callstack 0
   418   000040                     lcd_4_bit_set_cursor@lcd:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x12
   422   000040                     	ds	2
   423   000042                     ??_lcd_pins_4_initialize:
   424   000042                     lcd_4_bit_set_cursor@row:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x14
   428   000042                     	ds	1
   429   000043                     lcd_4_bit_set_cursor@column:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x15
   433   000043                     	ds	1
   434   000044                     lcd_pins_4_initialize@ret:
   435                           	callstack 0
   436   000044                     lcd_4_bit_set_cursor@ret:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x16
   440   000044                     	ds	1
   441   000045                     lcd_pins_4_initialize@cnt_pin:
   442                           	callstack 0
   443   000045                     send_4_bit_string_data_pos@lcd:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x17
   447   000045                     	ds	1
   448   000046                     
   449                           ; 1 bytes @ 0x18
   450   000046                     	ds	1
   451   000047                     send_4_bit_string_data_pos@row:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x19
   455   000047                     	ds	1
   456   000048                     send_4_bit_string_data_pos@column:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x1A
   460   000048                     	ds	1
   461   000049                     send_4_bit_string_data_pos@data:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x1B
   465   000049                     	ds	2
   466   00004B                     ??_main:
   467                           
   468                           ; 1 bytes @ 0x1D
   469   00004B                     	ds	1
   470   00004C                     main@i:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x1E
   474   00004C                     	ds	1
   475   00004D                     main@i_659:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x1F
   479   00004D                     	ds	1
   480   00004E                     main@i_661:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x20
   484   00004E                     	ds	1
   485   00004F                     main@R:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x21
   489   00004F                     	ds	1
   490   000050                     main@G:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x22
   494   000050                     	ds	1
   495   000051                     main@Y:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x23
   499   000051                     	ds	1
   500                           
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 80 in file "Traffic_Light.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  i               1   32[COMRAM] char 
   511 ;;  i               1   31[COMRAM] char 
   512 ;;  i               1   30[COMRAM] char 
   513 ;;  Y               1   35[COMRAM] unsigned char 
   514 ;;  G               1   34[COMRAM] unsigned char 
   515 ;;  R               1   33[COMRAM] unsigned char 
   516 ;;  ret             1    0        unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  2  394[None  ] int 
   519 ;; Registers used:
   520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;Total ram usage:        7 bytes
   531 ;; Hardware stack levels required when called: 5
   532 ;; This function calls:
   533 ;;		_Led_Turn_Off
   534 ;;		_Led_Turn_On
   535 ;;		___awdiv
   536 ;;		___awmod
   537 ;;		_application_initialize
   538 ;;		_gpio_pin_write_logic
   539 ;;		_segment_write_number
   540 ;;		_send_4_bit_string_data_pos
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text0
   547   00101A                     __ptext0:
   548                           	callstack 0
   549   00101A                     _main:
   550                           	callstack 26
   551   00101A                     
   552                           ;Traffic_Light.c: 82:     application_initialize();
   553   00101A  EC9D  F00E         	call	_application_initialize	;wreg free
   554   00101E                     l2584:
   555                           
   556                           ;Traffic_Light.c: 84:          uint8 R = 30;
   557   00101E  0E1E               	movlw	30
   558   001020  6E4F               	movwf	main@R^0,c
   559   001022                     
   560                           ;Traffic_Light.c: 85:          uint8 G = 30;
   561   001022  0E1E               	movlw	30
   562   001024  6E50               	movwf	main@G^0,c
   563   001026                     
   564                           ;Traffic_Light.c: 86:          uint8 Y = 5;
   565   001026  0E05               	movlw	5
   566   001028  6E51               	movwf	main@Y^0,c
   567   00102A                     
   568                           ;Traffic_Light.c: 87:         if(0 == x)
   569   00102A  5068               	movf	_x^0,w,c
   570   00102C  A4D8               	btfss	status,2,c
   571   00102E  EF1B  F008         	goto	u1831
   572   001032  EF1D  F008         	goto	u1830
   573   001036                     u1831:
   574   001036  EFA1  F008         	goto	l2630
   575   00103A                     u1830:
   576   00103A                     
   577                           ;Traffic_Light.c: 88:         {;Traffic_Light.c: 89:            for(signed char i = R; i
      +                          >=0; i--){
   578   00103A  0E1E               	movlw	30
   579   00103C  6E4C               	movwf	main@i^0,c
   580   00103E                     l2598:
   581                           
   582                           ;Traffic_Light.c: 90:                 Led_Turn_Off(&led_green);
   583   00103E  0E6D               	movlw	low _led_green
   584   001040  6E38               	movwf	Led_Turn_Off@led^0,c
   585   001042  0E00               	movlw	high _led_green
   586   001044  6E39               	movwf	(Led_Turn_Off@led+1)^0,c
   587   001046  EC4C  F00D         	call	_Led_Turn_Off	;wreg free
   588                           
   589                           ;Traffic_Light.c: 91:                 Led_Turn_On(&led_red);
   590   00104A  0E2C               	movlw	low _led_red
   591   00104C  6E38               	movwf	Led_Turn_On@led^0,c
   592   00104E  0E00               	movlw	high _led_red
   593   001050  6E39               	movwf	(Led_Turn_On@led+1)^0,c
   594   001052  EC11  F00D         	call	_Led_Turn_On	;wreg free
   595   001056                     
   596                           ;Traffic_Light.c: 92:                 send_4_bit_string_data_pos(&lcd_4bit,2,8,"STOP");
   597   001056  0E1F               	movlw	low _lcd_4bit
   598   001058  6E45               	movwf	send_4_bit_string_data_pos@lcd^0,c
   599   00105A  0E00               	movlw	high _lcd_4bit
   600   00105C  6E46               	movwf	(send_4_bit_string_data_pos@lcd+1)^0,c
   601   00105E  0E02               	movlw	2
   602   001060  6E47               	movwf	send_4_bit_string_data_pos@row^0,c
   603   001062  0E08               	movlw	8
   604   001064  6E48               	movwf	send_4_bit_string_data_pos@column^0,c
   605   001066  0E11               	movlw	low STR_4
   606   001068  6E49               	movwf	send_4_bit_string_data_pos@data^0,c
   607   00106A  0E10               	movlw	high STR_4
   608   00106C  6E4A               	movwf	(send_4_bit_string_data_pos@data+1)^0,c
   609   00106E  EC68  F00E         	call	_send_4_bit_string_data_pos	;wreg free
   610   001072                     
   611                           ;Traffic_Light.c: 93:                 for(t_delay = 0; t_delay <= 50; t_delay++)
   612   001072  0E00               	movlw	0
   613   001074  6E67               	movwf	_t_delay^0,c
   614   001076                     l2608:
   615                           
   616                           ;Traffic_Light.c: 94:                    {;Traffic_Light.c: 95:                        s
      +                          egment_write_number(&segment_1,(R % 10));
   617   001076  0E25               	movlw	low _segment_1
   618   001078  6E38               	movwf	segment_write_number@segment^0,c
   619   00107A  0E00               	movlw	high _segment_1
   620   00107C  6E39               	movwf	(segment_write_number@segment+1)^0,c
   621   00107E  C04F  F02E         	movff	main@R,___awmod@dividend
   622   001082  6A2F               	clrf	(___awmod@dividend+1)^0,c
   623   001084  0E00               	movlw	0
   624   001086  6E31               	movwf	(___awmod@divisor+1)^0,c
   625   001088  0E0A               	movlw	10
   626   00108A  6E30               	movwf	___awmod@divisor^0,c
   627   00108C  EC3A  F00C         	call	___awmod	;wreg free
   628   001090  502E               	movf	?___awmod^0,w,c
   629   001092  6E3A               	movwf	segment_write_number@num^0,c
   630   001094  ECD6  F00C         	call	_segment_write_number	;wreg free
   631                           
   632                           ;Traffic_Light.c: 96:                        gpio_pin_write_logic(&segment_enable_2,LOW)
      +                          ;
   633   001098  0E2A               	movlw	low _segment_enable_2
   634   00109A  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   635   00109C  0E00               	movlw	high _segment_enable_2
   636   00109E  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   637   0010A0  0E00               	movlw	0
   638   0010A2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   639   0010A4  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   640   0010A8                     
   641                           ;Traffic_Light.c: 97:                        _delay((unsigned long)((10)*(4000000UL/4000
      +                          .0)));
   642   0010A8  0E0D               	movlw	13
   643   0010AA  6E4B               	movwf	??_main^0,c
   644   0010AC  0EFC               	movlw	252
   645   0010AE                     u1927:
   646   0010AE  2EE8               	decfsz	wreg,f,c
   647   0010B0  D7FE               	bra	u1927
   648   0010B2  2E4B               	decfsz	??_main^0,f,c
   649   0010B4  D7FC               	bra	u1927
   650   0010B6                     
   651                           ;Traffic_Light.c: 98:                        gpio_pin_write_logic(&segment_enable_2,HIGH
      +                          );
   652   0010B6  0E2A               	movlw	low _segment_enable_2
   653   0010B8  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   654   0010BA  0E00               	movlw	high _segment_enable_2
   655   0010BC  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   656   0010BE  0E01               	movlw	1
   657   0010C0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   658   0010C2  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   659   0010C6                     
   660                           ;Traffic_Light.c: 100:                        segment_write_number(&segment_1,(R / 10));
   661   0010C6  0E25               	movlw	low _segment_1
   662   0010C8  6E38               	movwf	segment_write_number@segment^0,c
   663   0010CA  0E00               	movlw	high _segment_1
   664   0010CC  6E39               	movwf	(segment_write_number@segment+1)^0,c
   665   0010CE  C04F  F02E         	movff	main@R,___awdiv@dividend
   666   0010D2  6A2F               	clrf	(___awdiv@dividend+1)^0,c
   667   0010D4  0E00               	movlw	0
   668   0010D6  6E31               	movwf	(___awdiv@divisor+1)^0,c
   669   0010D8  0E0A               	movlw	10
   670   0010DA  6E30               	movwf	___awdiv@divisor^0,c
   671   0010DC  ECD8  F00B         	call	___awdiv	;wreg free
   672   0010E0  502E               	movf	?___awdiv^0,w,c
   673   0010E2  6E3A               	movwf	segment_write_number@num^0,c
   674   0010E4  ECD6  F00C         	call	_segment_write_number	;wreg free
   675   0010E8                     
   676                           ;Traffic_Light.c: 101:                        gpio_pin_write_logic(&segment_enable_1,LOW
      +                          );
   677   0010E8  0E2B               	movlw	low _segment_enable_1
   678   0010EA  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   679   0010EC  0E00               	movlw	high _segment_enable_1
   680   0010EE  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   681   0010F0  0E00               	movlw	0
   682   0010F2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   683   0010F4  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   684                           
   685                           ;Traffic_Light.c: 102:                        _delay((unsigned long)((10)*(4000000UL/400
      +                          0.0)));
   686   0010F8  0E0D               	movlw	13
   687   0010FA  6E4B               	movwf	??_main^0,c
   688   0010FC  0EFC               	movlw	252
   689   0010FE                     u1937:
   690   0010FE  2EE8               	decfsz	wreg,f,c
   691   001100  D7FE               	bra	u1937
   692   001102  2E4B               	decfsz	??_main^0,f,c
   693   001104  D7FC               	bra	u1937
   694   001106                     
   695                           ;Traffic_Light.c: 103:                        gpio_pin_write_logic(&segment_enable_1,HIG
      +                          H);
   696   001106  0E2B               	movlw	low _segment_enable_1
   697   001108  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   698   00110A  0E00               	movlw	high _segment_enable_1
   699   00110C  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   700   00110E  0E01               	movlw	1
   701   001110  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   702   001112  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   703   001116                     
   704                           ;Traffic_Light.c: 104:                     }
   705   001116  2A67               	incf	_t_delay^0,f,c
   706   001118  0E32               	movlw	50
   707   00111A  6467               	cpfsgt	_t_delay^0,c
   708   00111C  EF92  F008         	goto	u1841
   709   001120  EF94  F008         	goto	u1840
   710   001124                     u1841:
   711   001124  EF3B  F008         	goto	l2608
   712   001128                     u1840:
   713   001128                     
   714                           ;Traffic_Light.c: 105:                 R--;
   715   001128  064F               	decf	main@R^0,f,c
   716                           
   717                           ;Traffic_Light.c: 106:          }
   718   00112A  064C               	decf	main@i^0,f,c
   719   00112C  BE4C               	btfsc	main@i^0,7,c
   720   00112E  EF9D  F008         	goto	u1850
   721   001132  EF9B  F008         	goto	u1851
   722   001136                     u1851:
   723   001136  EF1F  F008         	goto	l2598
   724   00113A                     u1850:
   725   00113A                     
   726                           ;Traffic_Light.c: 107:             x = 1;
   727   00113A  0E01               	movlw	1
   728   00113C  6E68               	movwf	_x^0,c
   729                           
   730                           ;Traffic_Light.c: 108:         }
   731   00113E  EF0F  F008         	goto	l2584
   732   001142                     l2630:
   733   001142  0468               	decf	_x^0,w,c
   734   001144  A4D8               	btfss	status,2,c
   735   001146  EFA7  F008         	goto	u1861
   736   00114A  EFA9  F008         	goto	u1860
   737   00114E                     u1861:
   738   00114E  EF2D  F009         	goto	l2670
   739   001152                     u1860:
   740   001152                     
   741                           ;Traffic_Light.c: 110:         {;Traffic_Light.c: 111:            for(signed char i = Y;
      +                           i>=0; i--){
   742   001152  0E05               	movlw	5
   743   001154  6E4D               	movwf	main@i_659^0,c
   744   001156                     l2638:
   745                           
   746                           ;Traffic_Light.c: 112:                 Led_Turn_Off(&led_red);
   747   001156  0E2C               	movlw	low _led_red
   748   001158  6E38               	movwf	Led_Turn_Off@led^0,c
   749   00115A  0E00               	movlw	high _led_red
   750   00115C  6E39               	movwf	(Led_Turn_Off@led+1)^0,c
   751   00115E  EC4C  F00D         	call	_Led_Turn_Off	;wreg free
   752                           
   753                           ;Traffic_Light.c: 113:                 Led_Turn_On(&led_yellow);
   754   001162  0E2D               	movlw	low _led_yellow
   755   001164  6E38               	movwf	Led_Turn_On@led^0,c
   756   001166  0E00               	movlw	high _led_yellow
   757   001168  6E39               	movwf	(Led_Turn_On@led+1)^0,c
   758   00116A  EC11  F00D         	call	_Led_Turn_On	;wreg free
   759   00116E                     
   760                           ;Traffic_Light.c: 114:                 send_4_bit_string_data_pos(&lcd_4bit,2,8,"READY!!
      +                          ");
   761   00116E  0E1F               	movlw	low _lcd_4bit
   762   001170  6E45               	movwf	send_4_bit_string_data_pos@lcd^0,c
   763   001172  0E00               	movlw	high _lcd_4bit
   764   001174  6E46               	movwf	(send_4_bit_string_data_pos@lcd+1)^0,c
   765   001176  0E02               	movlw	2
   766   001178  6E47               	movwf	send_4_bit_string_data_pos@row^0,c
   767   00117A  0E08               	movlw	8
   768   00117C  6E48               	movwf	send_4_bit_string_data_pos@column^0,c
   769   00117E  0E09               	movlw	low STR_5
   770   001180  6E49               	movwf	send_4_bit_string_data_pos@data^0,c
   771   001182  0E10               	movlw	high STR_5
   772   001184  6E4A               	movwf	(send_4_bit_string_data_pos@data+1)^0,c
   773   001186  EC68  F00E         	call	_send_4_bit_string_data_pos	;wreg free
   774   00118A                     
   775                           ;Traffic_Light.c: 115:                 for(t_delay = 0; t_delay <= 50; t_delay++)
   776   00118A  0E00               	movlw	0
   777   00118C  6E67               	movwf	_t_delay^0,c
   778   00118E                     l2648:
   779                           
   780                           ;Traffic_Light.c: 116:                    {;Traffic_Light.c: 117:                       
      +                           segment_write_number(&segment_1,(Y % 10));
   781   00118E  0E25               	movlw	low _segment_1
   782   001190  6E38               	movwf	segment_write_number@segment^0,c
   783   001192  0E00               	movlw	high _segment_1
   784   001194  6E39               	movwf	(segment_write_number@segment+1)^0,c
   785   001196  C051  F02E         	movff	main@Y,___awmod@dividend
   786   00119A  6A2F               	clrf	(___awmod@dividend+1)^0,c
   787   00119C  0E00               	movlw	0
   788   00119E  6E31               	movwf	(___awmod@divisor+1)^0,c
   789   0011A0  0E0A               	movlw	10
   790   0011A2  6E30               	movwf	___awmod@divisor^0,c
   791   0011A4  EC3A  F00C         	call	___awmod	;wreg free
   792   0011A8  502E               	movf	?___awmod^0,w,c
   793   0011AA  6E3A               	movwf	segment_write_number@num^0,c
   794   0011AC  ECD6  F00C         	call	_segment_write_number	;wreg free
   795                           
   796                           ;Traffic_Light.c: 118:                        gpio_pin_write_logic(&segment_enable_2,LOW
      +                          );
   797   0011B0  0E2A               	movlw	low _segment_enable_2
   798   0011B2  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   799   0011B4  0E00               	movlw	high _segment_enable_2
   800   0011B6  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   801   0011B8  0E00               	movlw	0
   802   0011BA  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   803   0011BC  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   804   0011C0                     
   805                           ;Traffic_Light.c: 119:                        _delay((unsigned long)((10)*(4000000UL/400
      +                          0.0)));
   806   0011C0  0E0D               	movlw	13
   807   0011C2  6E4B               	movwf	??_main^0,c
   808   0011C4  0EFC               	movlw	252
   809   0011C6                     u1947:
   810   0011C6  2EE8               	decfsz	wreg,f,c
   811   0011C8  D7FE               	bra	u1947
   812   0011CA  2E4B               	decfsz	??_main^0,f,c
   813   0011CC  D7FC               	bra	u1947
   814   0011CE                     
   815                           ;Traffic_Light.c: 120:                        gpio_pin_write_logic(&segment_enable_2,HIG
      +                          H);
   816   0011CE  0E2A               	movlw	low _segment_enable_2
   817   0011D0  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   818   0011D2  0E00               	movlw	high _segment_enable_2
   819   0011D4  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   820   0011D6  0E01               	movlw	1
   821   0011D8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   822   0011DA  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   823   0011DE                     
   824                           ;Traffic_Light.c: 122:                        segment_write_number(&segment_1,(Y / 10));
   825   0011DE  0E25               	movlw	low _segment_1
   826   0011E0  6E38               	movwf	segment_write_number@segment^0,c
   827   0011E2  0E00               	movlw	high _segment_1
   828   0011E4  6E39               	movwf	(segment_write_number@segment+1)^0,c
   829   0011E6  C051  F02E         	movff	main@Y,___awdiv@dividend
   830   0011EA  6A2F               	clrf	(___awdiv@dividend+1)^0,c
   831   0011EC  0E00               	movlw	0
   832   0011EE  6E31               	movwf	(___awdiv@divisor+1)^0,c
   833   0011F0  0E0A               	movlw	10
   834   0011F2  6E30               	movwf	___awdiv@divisor^0,c
   835   0011F4  ECD8  F00B         	call	___awdiv	;wreg free
   836   0011F8  502E               	movf	?___awdiv^0,w,c
   837   0011FA  6E3A               	movwf	segment_write_number@num^0,c
   838   0011FC  ECD6  F00C         	call	_segment_write_number	;wreg free
   839   001200                     
   840                           ;Traffic_Light.c: 123:                        gpio_pin_write_logic(&segment_enable_1,LOW
      +                          );
   841   001200  0E2B               	movlw	low _segment_enable_1
   842   001202  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   843   001204  0E00               	movlw	high _segment_enable_1
   844   001206  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   845   001208  0E00               	movlw	0
   846   00120A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   847   00120C  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   848                           
   849                           ;Traffic_Light.c: 124:                        _delay((unsigned long)((10)*(4000000UL/400
      +                          0.0)));
   850   001210  0E0D               	movlw	13
   851   001212  6E4B               	movwf	??_main^0,c
   852   001214  0EFC               	movlw	252
   853   001216                     u1957:
   854   001216  2EE8               	decfsz	wreg,f,c
   855   001218  D7FE               	bra	u1957
   856   00121A  2E4B               	decfsz	??_main^0,f,c
   857   00121C  D7FC               	bra	u1957
   858   00121E                     
   859                           ;Traffic_Light.c: 125:                        gpio_pin_write_logic(&segment_enable_1,HIG
      +                          H);
   860   00121E  0E2B               	movlw	low _segment_enable_1
   861   001220  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   862   001222  0E00               	movlw	high _segment_enable_1
   863   001224  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   864   001226  0E01               	movlw	1
   865   001228  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   866   00122A  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   867   00122E                     
   868                           ;Traffic_Light.c: 126:                    }
   869   00122E  2A67               	incf	_t_delay^0,f,c
   870   001230  0E32               	movlw	50
   871   001232  6467               	cpfsgt	_t_delay^0,c
   872   001234  EF1E  F009         	goto	u1871
   873   001238  EF20  F009         	goto	u1870
   874   00123C                     u1871:
   875   00123C  EFC7  F008         	goto	l2648
   876   001240                     u1870:
   877   001240                     
   878                           ;Traffic_Light.c: 127:                 Y--;
   879   001240  0651               	decf	main@Y^0,f,c
   880                           
   881                           ;Traffic_Light.c: 128:          }
   882   001242  064D               	decf	main@i_659^0,f,c
   883   001244  BE4D               	btfsc	main@i_659^0,7,c
   884   001246  EF29  F009         	goto	u1880
   885   00124A  EF27  F009         	goto	u1881
   886   00124E                     u1881:
   887   00124E  EFAB  F008         	goto	l2638
   888   001252                     u1880:
   889   001252                     
   890                           ;Traffic_Light.c: 129:            x = 2;
   891   001252  0E02               	movlw	2
   892   001254  6E68               	movwf	_x^0,c
   893                           
   894                           ;Traffic_Light.c: 130:         }
   895   001256  EF0F  F008         	goto	l2584
   896   00125A                     l2670:
   897   00125A  0E02               	movlw	2
   898   00125C  1868               	xorwf	_x^0,w,c
   899   00125E  A4D8               	btfss	status,2,c
   900   001260  EF34  F009         	goto	u1891
   901   001264  EF36  F009         	goto	u1890
   902   001268                     u1891:
   903   001268  EFBE  F009         	goto	l401
   904   00126C                     u1890:
   905   00126C                     
   906                           ;Traffic_Light.c: 132:         {;Traffic_Light.c: 133:            for(signed char i = G;
      +                           i>=0; i--){
   907   00126C  0E1E               	movlw	30
   908   00126E  6E4E               	movwf	main@i_661^0,c
   909   001270                     l2674:
   910   001270  BE4E               	btfsc	main@i_661^0,7,c
   911   001272  EF3F  F009         	goto	u1900
   912   001276  EF3D  F009         	goto	u1901
   913   00127A                     u1901:
   914   00127A  EF41  F009         	goto	l2678
   915   00127E                     u1900:
   916   00127E  EFBA  F009         	goto	l2708
   917   001282                     l2678:
   918                           
   919                           ;Traffic_Light.c: 134:                 Led_Turn_Off(&led_yellow);
   920   001282  0E2D               	movlw	low _led_yellow
   921   001284  6E38               	movwf	Led_Turn_Off@led^0,c
   922   001286  0E00               	movlw	high _led_yellow
   923   001288  6E39               	movwf	(Led_Turn_Off@led+1)^0,c
   924   00128A  EC4C  F00D         	call	_Led_Turn_Off	;wreg free
   925                           
   926                           ;Traffic_Light.c: 135:                 Led_Turn_On(&led_green);
   927   00128E  0E6D               	movlw	low _led_green
   928   001290  6E38               	movwf	Led_Turn_On@led^0,c
   929   001292  0E00               	movlw	high _led_green
   930   001294  6E39               	movwf	(Led_Turn_On@led+1)^0,c
   931   001296  EC11  F00D         	call	_Led_Turn_On	;wreg free
   932   00129A                     
   933                           ;Traffic_Light.c: 136:                 send_4_bit_string_data_pos(&lcd_4bit,2,8," GO    
      +                          ");
   934   00129A  0E1F               	movlw	low _lcd_4bit
   935   00129C  6E45               	movwf	send_4_bit_string_data_pos@lcd^0,c
   936   00129E  0E00               	movlw	high _lcd_4bit
   937   0012A0  6E46               	movwf	(send_4_bit_string_data_pos@lcd+1)^0,c
   938   0012A2  0E02               	movlw	2
   939   0012A4  6E47               	movwf	send_4_bit_string_data_pos@row^0,c
   940   0012A6  0E08               	movlw	8
   941   0012A8  6E48               	movwf	send_4_bit_string_data_pos@column^0,c
   942   0012AA  0E01               	movlw	low STR_6
   943   0012AC  6E49               	movwf	send_4_bit_string_data_pos@data^0,c
   944   0012AE  0E10               	movlw	high STR_6
   945   0012B0  6E4A               	movwf	(send_4_bit_string_data_pos@data+1)^0,c
   946   0012B2  EC68  F00E         	call	_send_4_bit_string_data_pos	;wreg free
   947   0012B6                     
   948                           ;Traffic_Light.c: 137:                 for(t_delay = 0; t_delay <= 50; t_delay++)
   949   0012B6  0E00               	movlw	0
   950   0012B8  6E67               	movwf	_t_delay^0,c
   951   0012BA                     l2688:
   952                           
   953                           ;Traffic_Light.c: 138:                    {;Traffic_Light.c: 139:                       
      +                           segment_write_number(&segment_1,(G % 10));
   954   0012BA  0E25               	movlw	low _segment_1
   955   0012BC  6E38               	movwf	segment_write_number@segment^0,c
   956   0012BE  0E00               	movlw	high _segment_1
   957   0012C0  6E39               	movwf	(segment_write_number@segment+1)^0,c
   958   0012C2  C050  F02E         	movff	main@G,___awmod@dividend
   959   0012C6  6A2F               	clrf	(___awmod@dividend+1)^0,c
   960   0012C8  0E00               	movlw	0
   961   0012CA  6E31               	movwf	(___awmod@divisor+1)^0,c
   962   0012CC  0E0A               	movlw	10
   963   0012CE  6E30               	movwf	___awmod@divisor^0,c
   964   0012D0  EC3A  F00C         	call	___awmod	;wreg free
   965   0012D4  502E               	movf	?___awmod^0,w,c
   966   0012D6  6E3A               	movwf	segment_write_number@num^0,c
   967   0012D8  ECD6  F00C         	call	_segment_write_number	;wreg free
   968                           
   969                           ;Traffic_Light.c: 140:                        gpio_pin_write_logic(&segment_enable_2,LOW
      +                          );
   970   0012DC  0E2A               	movlw	low _segment_enable_2
   971   0012DE  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   972   0012E0  0E00               	movlw	high _segment_enable_2
   973   0012E2  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   974   0012E4  0E00               	movlw	0
   975   0012E6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   976   0012E8  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   977   0012EC                     
   978                           ;Traffic_Light.c: 141:                        _delay((unsigned long)((10)*(4000000UL/400
      +                          0.0)));
   979   0012EC  0E0D               	movlw	13
   980   0012EE  6E4B               	movwf	??_main^0,c
   981   0012F0  0EFC               	movlw	252
   982   0012F2                     u1967:
   983   0012F2  2EE8               	decfsz	wreg,f,c
   984   0012F4  D7FE               	bra	u1967
   985   0012F6  2E4B               	decfsz	??_main^0,f,c
   986   0012F8  D7FC               	bra	u1967
   987   0012FA                     
   988                           ;Traffic_Light.c: 142:                        gpio_pin_write_logic(&segment_enable_2,HIG
      +                          H);
   989   0012FA  0E2A               	movlw	low _segment_enable_2
   990   0012FC  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
   991   0012FE  0E00               	movlw	high _segment_enable_2
   992   001300  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
   993   001302  0E01               	movlw	1
   994   001304  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   995   001306  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
   996   00130A                     
   997                           ;Traffic_Light.c: 144:                        segment_write_number(&segment_1,(G / 10));
   998   00130A  0E25               	movlw	low _segment_1
   999   00130C  6E38               	movwf	segment_write_number@segment^0,c
  1000   00130E  0E00               	movlw	high _segment_1
  1001   001310  6E39               	movwf	(segment_write_number@segment+1)^0,c
  1002   001312  C050  F02E         	movff	main@G,___awdiv@dividend
  1003   001316  6A2F               	clrf	(___awdiv@dividend+1)^0,c
  1004   001318  0E00               	movlw	0
  1005   00131A  6E31               	movwf	(___awdiv@divisor+1)^0,c
  1006   00131C  0E0A               	movlw	10
  1007   00131E  6E30               	movwf	___awdiv@divisor^0,c
  1008   001320  ECD8  F00B         	call	___awdiv	;wreg free
  1009   001324  502E               	movf	?___awdiv^0,w,c
  1010   001326  6E3A               	movwf	segment_write_number@num^0,c
  1011   001328  ECD6  F00C         	call	_segment_write_number	;wreg free
  1012   00132C                     
  1013                           ;Traffic_Light.c: 145:                        gpio_pin_write_logic(&segment_enable_1,LOW
      +                          );
  1014   00132C  0E2B               	movlw	low _segment_enable_1
  1015   00132E  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  1016   001330  0E00               	movlw	high _segment_enable_1
  1017   001332  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  1018   001334  0E00               	movlw	0
  1019   001336  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1020   001338  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1021                           
  1022                           ;Traffic_Light.c: 146:                        _delay((unsigned long)((10)*(4000000UL/400
      +                          0.0)));
  1023   00133C  0E0D               	movlw	13
  1024   00133E  6E4B               	movwf	??_main^0,c
  1025   001340  0EFC               	movlw	252
  1026   001342                     u1977:
  1027   001342  2EE8               	decfsz	wreg,f,c
  1028   001344  D7FE               	bra	u1977
  1029   001346  2E4B               	decfsz	??_main^0,f,c
  1030   001348  D7FC               	bra	u1977
  1031   00134A                     
  1032                           ;Traffic_Light.c: 147:                        gpio_pin_write_logic(&segment_enable_1,HIG
      +                          H);
  1033   00134A  0E2B               	movlw	low _segment_enable_1
  1034   00134C  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  1035   00134E  0E00               	movlw	high _segment_enable_1
  1036   001350  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  1037   001352  0E01               	movlw	1
  1038   001354  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1039   001356  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1040   00135A                     
  1041                           ;Traffic_Light.c: 148:                     }
  1042   00135A  2A67               	incf	_t_delay^0,f,c
  1043   00135C  0E32               	movlw	50
  1044   00135E  6467               	cpfsgt	_t_delay^0,c
  1045   001360  EFB4  F009         	goto	u1911
  1046   001364  EFB6  F009         	goto	u1910
  1047   001368                     u1911:
  1048   001368  EF5D  F009         	goto	l2688
  1049   00136C                     u1910:
  1050   00136C                     
  1051                           ;Traffic_Light.c: 149:                 G--;
  1052   00136C  0650               	decf	main@G^0,f,c
  1053                           
  1054                           ;Traffic_Light.c: 150:          }
  1055   00136E  064E               	decf	main@i_661^0,f,c
  1056   001370  EF38  F009         	goto	l2674
  1057   001374                     l2708:
  1058                           
  1059                           ;Traffic_Light.c: 151:             x = 0;
  1060   001374  0E00               	movlw	0
  1061   001376  6E68               	movwf	_x^0,c
  1062                           
  1063                           ;Traffic_Light.c: 152:         }
  1064   001378  EF0F  F008         	goto	l2584
  1065   00137C                     l401:
  1066   00137C  EF0F  F008         	goto	l2584
  1067   001380  EF00  F000         	goto	start
  1068   001384                     __end_of_main:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _send_4_bit_string_data_pos *****************
  1072 ;; Defined at:
  1073 ;;		line 111 in file "ECU_layer/LCD/ecu_lcd.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  lcd             2   23[COMRAM] PTR const struct .
  1076 ;;		 -> lcd_4bit(6), 
  1077 ;;  row             1   25[COMRAM] unsigned char 
  1078 ;;  column          1   26[COMRAM] unsigned char 
  1079 ;;  data            2   27[COMRAM] PTR unsigned char 
  1080 ;;		 -> STR_6(8), STR_5(8), STR_4(5), 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  ret             1    0        unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      unsigned char 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        6 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 4
  1099 ;; This function calls:
  1100 ;;		_lcd_4_bit_set_cursor
  1101 ;;		_send_4_bit_char_data
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text1
  1108   001CD0                     __ptext1:
  1109                           	callstack 0
  1110   001CD0                     _send_4_bit_string_data_pos:
  1111                           	callstack 26
  1112   001CD0                     
  1113                           ;ECU_layer/LCD/ecu_lcd.c: 114:     if(((void*)0) == lcd)
  1114   001CD0  5045               	movf	send_4_bit_string_data_pos@lcd^0,w,c
  1115   001CD2  1046               	iorwf	(send_4_bit_string_data_pos@lcd+1)^0,w,c
  1116   001CD4  A4D8               	btfss	status,2,c
  1117   001CD6  EF6F  F00E         	goto	u1521
  1118   001CDA  EF71  F00E         	goto	u1520
  1119   001CDE                     u1521:
  1120   001CDE  EF73  F00E         	goto	l2316
  1121   001CE2                     u1520:
  1122   001CE2  EF9C  F00E         	goto	l81
  1123   001CE6                     l2316:
  1124   001CE6  C045  F040         	movff	send_4_bit_string_data_pos@lcd,lcd_4_bit_set_cursor@lcd
  1125   001CEA  C046  F041         	movff	send_4_bit_string_data_pos@lcd+1,lcd_4_bit_set_cursor@lcd+1
  1126   001CEE  C047  F042         	movff	send_4_bit_string_data_pos@row,lcd_4_bit_set_cursor@row
  1127   001CF2  C048  F043         	movff	send_4_bit_string_data_pos@column,lcd_4_bit_set_cursor@column
  1128   001CF6  EC73  F00B         	call	_lcd_4_bit_set_cursor	;wreg free
  1129                           
  1130                           ;ECU_layer/LCD/ecu_lcd.c: 119:       while(*data){
  1131   001CFA  EF8E  F00E         	goto	l2322
  1132   001CFE                     l2318:
  1133   001CFE  C045  F03C         	movff	send_4_bit_string_data_pos@lcd,send_4_bit_char_data@lcd
  1134   001D02  C046  F03D         	movff	send_4_bit_string_data_pos@lcd+1,send_4_bit_char_data@lcd+1
  1135   001D06  C049  FFF6         	movff	send_4_bit_string_data_pos@data,tblptrl
  1136   001D0A  C04A  FFF7         	movff	send_4_bit_string_data_pos@data+1,tblptrh
  1137   001D0E                     	if	0	;tblptru may be non-zero
  1138   001D0E                     	endif
  1139   001D0E                     	if	0	;tblptru may be non-zero
  1140   001D0E                     	endif
  1141   001D0E  0008               	tblrd		*
  1142   001D10  CFF5 F03E          	movff	tablat,send_4_bit_char_data@data
  1143   001D14  EC87  F00D         	call	_send_4_bit_char_data	;wreg free
  1144   001D18  4A49               	infsnz	send_4_bit_string_data_pos@data^0,f,c
  1145   001D1A  2A4A               	incf	(send_4_bit_string_data_pos@data+1)^0,f,c
  1146   001D1C                     l2322:
  1147                           
  1148                           ;ECU_layer/LCD/ecu_lcd.c: 119:       while(*data){
  1149   001D1C  C049  FFF6         	movff	send_4_bit_string_data_pos@data,tblptrl
  1150   001D20  C04A  FFF7         	movff	send_4_bit_string_data_pos@data+1,tblptrh
  1151   001D24                     	if	0	;tblptru may be non-zero
  1152   001D24                     	endif
  1153   001D24                     	if	0	;tblptru may be non-zero
  1154   001D24                     	endif
  1155   001D24  0008               	tblrd		*
  1156   001D26  50F5               	movf	tablat,w,c
  1157   001D28  0900               	iorlw	0
  1158   001D2A  A4D8               	btfss	status,2,c
  1159   001D2C  EF9A  F00E         	goto	u1531
  1160   001D30  EF9C  F00E         	goto	u1530
  1161   001D34                     u1531:
  1162   001D34  EF7F  F00E         	goto	l2318
  1163   001D38                     u1530:
  1164   001D38                     l81:
  1165   001D38  0012               	return		;funcret
  1166   001D3A                     __end_of_send_4_bit_string_data_pos:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _send_4_bit_char_data *****************
  1170 ;; Defined at:
  1171 ;;		line 61 in file "ECU_layer/LCD/ecu_lcd.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  lcd             2   14[COMRAM] PTR const struct .
  1174 ;;		 -> lcd_4bit(6), 
  1175 ;;  data            1   16[COMRAM] unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  ret             1   17[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      unsigned char 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:        4 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 2
  1194 ;; This function calls:
  1195 ;;		_gpio_pin_write_logic
  1196 ;;		_send_4_bit_enable
  1197 ;;		_send_4_bit_help
  1198 ;; This function is called by:
  1199 ;;		_send_4_bit_string_data_pos
  1200 ;;		_send_4_bit_char_data_pos
  1201 ;;		_send_4_bit_string_data
  1202 ;;		_send_4_bit_custome_char_data_pos
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text2
  1207   001B0E                     __ptext2:
  1208                           	callstack 0
  1209   001B0E                     _send_4_bit_char_data:
  1210                           	callstack 27
  1211   001B0E                     
  1212                           ;ECU_layer/LCD/ecu_lcd.c: 63:     if(((void*)0) == lcd)
  1213   001B0E  503C               	movf	send_4_bit_char_data@lcd^0,w,c
  1214   001B10  103D               	iorwf	(send_4_bit_char_data@lcd+1)^0,w,c
  1215   001B12  A4D8               	btfss	status,2,c
  1216   001B14  EF8E  F00D         	goto	u1341
  1217   001B18  EF90  F00D         	goto	u1340
  1218   001B1C                     u1341:
  1219   001B1C  EF94  F00D         	goto	l2188
  1220   001B20                     u1340:
  1221   001B20                     
  1222                           ;ECU_layer/LCD/ecu_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  1223   001B20  0E00               	movlw	0
  1224   001B22  6E3F               	movwf	send_4_bit_char_data@ret^0,c
  1225   001B24  EFBE  F00D         	goto	l2190
  1226   001B28                     l2188:
  1227                           
  1228                           ;ECU_layer/LCD/ecu_lcd.c: 66:     {;ECU_layer/LCD/ecu_lcd.c: 67:         ret = gpio_pin_
      +                          write_logic(&(lcd->rs_lcd),HIGH);
  1229   001B28  C03C  F02E         	movff	send_4_bit_char_data@lcd,gpio_pin_write_logic@Pin_Config
  1230   001B2C  C03D  F02F         	movff	send_4_bit_char_data@lcd+1,gpio_pin_write_logic@Pin_Config+1
  1231   001B30  0E01               	movlw	1
  1232   001B32  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1233   001B34  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1234   001B38  6E3F               	movwf	send_4_bit_char_data@ret^0,c
  1235                           
  1236                           ;ECU_layer/LCD/ecu_lcd.c: 68:         ret = send_4_bit_help(lcd,data >> 4);
  1237   001B3A  C03C  F038         	movff	send_4_bit_char_data@lcd,send_4_bit_help@lcd
  1238   001B3E  C03D  F039         	movff	send_4_bit_char_data@lcd+1,send_4_bit_help@lcd+1
  1239   001B42  383E               	swapf	send_4_bit_char_data@data^0,w,c
  1240   001B44  0B0F               	andlw	15
  1241   001B46  6E3A               	movwf	send_4_bit_help@data_command^0,c
  1242   001B48  EC92  F00C         	call	_send_4_bit_help	;wreg free
  1243   001B4C  6E3F               	movwf	send_4_bit_char_data@ret^0,c
  1244                           
  1245                           ;ECU_layer/LCD/ecu_lcd.c: 69:         ret = send_4_bit_enable(lcd);
  1246   001B4E  C03C  F038         	movff	send_4_bit_char_data@lcd,send_4_bit_enable@lcd
  1247   001B52  C03D  F039         	movff	send_4_bit_char_data@lcd+1,send_4_bit_enable@lcd+1
  1248   001B56  ECF2  F00E         	call	_send_4_bit_enable	;wreg free
  1249   001B5A  6E3F               	movwf	send_4_bit_char_data@ret^0,c
  1250                           
  1251                           ;ECU_layer/LCD/ecu_lcd.c: 70:         ret = send_4_bit_help(lcd,data);
  1252   001B5C  C03C  F038         	movff	send_4_bit_char_data@lcd,send_4_bit_help@lcd
  1253   001B60  C03D  F039         	movff	send_4_bit_char_data@lcd+1,send_4_bit_help@lcd+1
  1254   001B64  C03E  F03A         	movff	send_4_bit_char_data@data,send_4_bit_help@data_command
  1255   001B68  EC92  F00C         	call	_send_4_bit_help	;wreg free
  1256   001B6C  6E3F               	movwf	send_4_bit_char_data@ret^0,c
  1257                           
  1258                           ;ECU_layer/LCD/ecu_lcd.c: 71:         ret = send_4_bit_enable(lcd);
  1259   001B6E  C03C  F038         	movff	send_4_bit_char_data@lcd,send_4_bit_enable@lcd
  1260   001B72  C03D  F039         	movff	send_4_bit_char_data@lcd+1,send_4_bit_enable@lcd+1
  1261   001B76  ECF2  F00E         	call	_send_4_bit_enable	;wreg free
  1262   001B7A  6E3F               	movwf	send_4_bit_char_data@ret^0,c
  1263   001B7C                     l2190:
  1264                           
  1265                           ;ECU_layer/LCD/ecu_lcd.c: 73:              return ret;
  1266   001B7C  503F               	movf	send_4_bit_char_data@ret^0,w,c
  1267   001B7E  0012               	return		;funcret
  1268   001B80                     __end_of_send_4_bit_char_data:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function _lcd_4_bit_set_cursor *****************
  1272 ;; Defined at:
  1273 ;;		line 139 in file "ECU_layer/LCD/ecu_lcd.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  lcd             2   18[COMRAM] PTR const struct .
  1276 ;;		 -> lcd_4bit(6), 
  1277 ;;  row             1   20[COMRAM] unsigned char 
  1278 ;;  column          1   21[COMRAM] unsigned char 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  ret             1   22[COMRAM] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      unsigned char 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;Total ram usage:        5 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 3
  1297 ;; This function calls:
  1298 ;;		_send_4_bit_command
  1299 ;; This function is called by:
  1300 ;;		_send_4_bit_string_data_pos
  1301 ;;		_send_4_bit_char_data_pos
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text3
  1306   0016E6                     __ptext3:
  1307                           	callstack 0
  1308   0016E6                     _lcd_4_bit_set_cursor:
  1309                           	callstack 26
  1310   0016E6                     
  1311                           ;ECU_layer/LCD/ecu_lcd.c: 140:                     Std_ReturnType ret = (Std_ReturnType)
      +                          0x01;
  1312   0016E6  0E01               	movlw	1
  1313   0016E8  6E44               	movwf	lcd_4_bit_set_cursor@ret^0,c
  1314   0016EA                     
  1315                           ;ECU_layer/LCD/ecu_lcd.c: 141:                  column--;
  1316   0016EA  0643               	decf	lcd_4_bit_set_cursor@column^0,f,c
  1317   0016EC                     
  1318                           ;ECU_layer/LCD/ecu_lcd.c: 142:     if(((void*)0) == lcd)
  1319   0016EC  5040               	movf	lcd_4_bit_set_cursor@lcd^0,w,c
  1320   0016EE  1041               	iorwf	(lcd_4_bit_set_cursor@lcd+1)^0,w,c
  1321   0016F0  A4D8               	btfss	status,2,c
  1322   0016F2  EF7D  F00B         	goto	u1351
  1323   0016F6  EF7F  F00B         	goto	u1350
  1324   0016FA                     u1351:
  1325   0016FA  EF83  F00B         	goto	l2202
  1326   0016FE                     u1350:
  1327   0016FE                     
  1328                           ;ECU_layer/LCD/ecu_lcd.c: 143:         ret = (Std_ReturnType)0x00;
  1329   0016FE  0E00               	movlw	0
  1330   001700  6E44               	movwf	lcd_4_bit_set_cursor@ret^0,c
  1331   001702  EFD6  F00B         	goto	l2218
  1332   001706                     l2202:
  1333                           
  1334                           ;ECU_layer/LCD/ecu_lcd.c: 145:     {;ECU_layer/LCD/ecu_lcd.c: 146:         if(row == 1)
  1335   001706  0442               	decf	lcd_4_bit_set_cursor@row^0,w,c
  1336   001708  A4D8               	btfss	status,2,c
  1337   00170A  EF89  F00B         	goto	u1361
  1338   00170E  EF8B  F00B         	goto	u1360
  1339   001712                     u1361:
  1340   001712  EF97  F00B         	goto	l2206
  1341   001716                     u1360:
  1342   001716                     
  1343                           ;ECU_layer/LCD/ecu_lcd.c: 147:         {;ECU_layer/LCD/ecu_lcd.c: 148:             ret =
      +                           send_4_bit_command(lcd,(0x80 + column));
  1344   001716  C040  F03C         	movff	lcd_4_bit_set_cursor@lcd,send_4_bit_command@lcd
  1345   00171A  C041  F03D         	movff	lcd_4_bit_set_cursor@lcd+1,send_4_bit_command@lcd+1
  1346   00171E  5043               	movf	lcd_4_bit_set_cursor@column^0,w,c
  1347   001720  0F80               	addlw	128
  1348   001722  6E3E               	movwf	send_4_bit_command@command^0,c
  1349   001724  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1350   001728  6E44               	movwf	lcd_4_bit_set_cursor@ret^0,c
  1351                           
  1352                           ;ECU_layer/LCD/ecu_lcd.c: 149:         }
  1353   00172A  EFD6  F00B         	goto	l2218
  1354   00172E                     l2206:
  1355   00172E  0E02               	movlw	2
  1356   001730  1842               	xorwf	lcd_4_bit_set_cursor@row^0,w,c
  1357   001732  A4D8               	btfss	status,2,c
  1358   001734  EF9E  F00B         	goto	u1371
  1359   001738  EFA0  F00B         	goto	u1370
  1360   00173C                     u1371:
  1361   00173C  EFAC  F00B         	goto	l2210
  1362   001740                     u1370:
  1363   001740                     
  1364                           ;ECU_layer/LCD/ecu_lcd.c: 151:         {;ECU_layer/LCD/ecu_lcd.c: 152:             ret =
      +                           send_4_bit_command(lcd,(0xC0 + column));
  1365   001740  C040  F03C         	movff	lcd_4_bit_set_cursor@lcd,send_4_bit_command@lcd
  1366   001744  C041  F03D         	movff	lcd_4_bit_set_cursor@lcd+1,send_4_bit_command@lcd+1
  1367   001748  5043               	movf	lcd_4_bit_set_cursor@column^0,w,c
  1368   00174A  0FC0               	addlw	192
  1369   00174C  6E3E               	movwf	send_4_bit_command@command^0,c
  1370   00174E  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1371   001752  6E44               	movwf	lcd_4_bit_set_cursor@ret^0,c
  1372                           
  1373                           ;ECU_layer/LCD/ecu_lcd.c: 153:         }
  1374   001754  EFD6  F00B         	goto	l2218
  1375   001758                     l2210:
  1376   001758  0E03               	movlw	3
  1377   00175A  1842               	xorwf	lcd_4_bit_set_cursor@row^0,w,c
  1378   00175C  A4D8               	btfss	status,2,c
  1379   00175E  EFB3  F00B         	goto	u1381
  1380   001762  EFB5  F00B         	goto	u1380
  1381   001766                     u1381:
  1382   001766  EFC1  F00B         	goto	l2214
  1383   00176A                     u1380:
  1384   00176A                     
  1385                           ;ECU_layer/LCD/ecu_lcd.c: 155:             ret = send_4_bit_command(lcd,(0x94 + column))
      +                          ;
  1386   00176A  C040  F03C         	movff	lcd_4_bit_set_cursor@lcd,send_4_bit_command@lcd
  1387   00176E  C041  F03D         	movff	lcd_4_bit_set_cursor@lcd+1,send_4_bit_command@lcd+1
  1388   001772  5043               	movf	lcd_4_bit_set_cursor@column^0,w,c
  1389   001774  0F94               	addlw	148
  1390   001776  6E3E               	movwf	send_4_bit_command@command^0,c
  1391   001778  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1392   00177C  6E44               	movwf	lcd_4_bit_set_cursor@ret^0,c
  1393                           
  1394                           ;ECU_layer/LCD/ecu_lcd.c: 156:         }
  1395   00177E  EFD6  F00B         	goto	l2218
  1396   001782                     l2214:
  1397   001782  0E04               	movlw	4
  1398   001784  1842               	xorwf	lcd_4_bit_set_cursor@row^0,w,c
  1399   001786  A4D8               	btfss	status,2,c
  1400   001788  EFC8  F00B         	goto	u1391
  1401   00178C  EFCA  F00B         	goto	u1390
  1402   001790                     u1391:
  1403   001790  EFD6  F00B         	goto	l92
  1404   001794                     u1390:
  1405   001794                     
  1406                           ;ECU_layer/LCD/ecu_lcd.c: 158:             ret = send_4_bit_command(lcd,(0xD4 + column))
      +                          ;
  1407   001794  C040  F03C         	movff	lcd_4_bit_set_cursor@lcd,send_4_bit_command@lcd
  1408   001798  C041  F03D         	movff	lcd_4_bit_set_cursor@lcd+1,send_4_bit_command@lcd+1
  1409   00179C  5043               	movf	lcd_4_bit_set_cursor@column^0,w,c
  1410   00179E  0FD4               	addlw	212
  1411   0017A0  6E3E               	movwf	send_4_bit_command@command^0,c
  1412   0017A2  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1413   0017A6  6E44               	movwf	lcd_4_bit_set_cursor@ret^0,c
  1414   0017A8  EFD6  F00B         	goto	l2218
  1415   0017AC                     l92:
  1416   0017AC                     l2218:
  1417                           
  1418                           ;ECU_layer/LCD/ecu_lcd.c: 162:         return ret;
  1419   0017AC  5044               	movf	lcd_4_bit_set_cursor@ret^0,w,c
  1420   0017AE  0012               	return		;funcret
  1421   0017B0                     __end_of_lcd_4_bit_set_cursor:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _segment_write_number *****************
  1425 ;; Defined at:
  1426 ;;		line 28 in file "ECU_layer/7-Segment/ecu_7_segment.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  segment         2   10[COMRAM] PTR const struct .
  1429 ;;		 -> segment_1(5), 
  1430 ;;  num             1   12[COMRAM] unsigned char 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  ret             1    0        unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      unsigned char 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1442 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;Total ram usage:        3 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 1
  1449 ;; This function calls:
  1450 ;;		_gpio_pin_write_logic
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text4
  1457   0019AC                     __ptext4:
  1458                           	callstack 0
  1459   0019AC                     _segment_write_number:
  1460                           	callstack 29
  1461   0019AC                     
  1462                           ;ECU_layer/7-Segment/ecu_7_segment.c: 36:     if(((void*)0) == segment)
  1463   0019AC  5038               	movf	segment_write_number@segment^0,w,c
  1464   0019AE  1039               	iorwf	(segment_write_number@segment+1)^0,w,c
  1465   0019B0  A4D8               	btfss	status,2,c
  1466   0019B2  EFDD  F00C         	goto	u1501
  1467   0019B6  EFDF  F00C         	goto	u1500
  1468   0019BA                     u1501:
  1469   0019BA  EFE1  F00C         	goto	l2296
  1470   0019BE                     u1500:
  1471   0019BE  EF10  F00D         	goto	l14
  1472   0019C2                     l2296:
  1473                           
  1474                           ;ECU_layer/7-Segment/ecu_7_segment.c: 44:         gpio_pin_write_logic(&(segment->segmen
      +                          t_pin[0]), num & 1);
  1475   0019C2  C038  F02E         	movff	segment_write_number@segment,gpio_pin_write_logic@Pin_Config
  1476   0019C6  C039  F02F         	movff	segment_write_number@segment+1,gpio_pin_write_logic@Pin_Config+1
  1477   0019CA  503A               	movf	segment_write_number@num^0,w,c
  1478   0019CC  0B01               	andlw	1
  1479   0019CE  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1480   0019D0  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1481                           
  1482                           ;ECU_layer/7-Segment/ecu_7_segment.c: 45:         gpio_pin_write_logic(&(segment->segmen
      +                          t_pin[1]), (num >> 1) & 1);
  1483   0019D4  0E01               	movlw	1
  1484   0019D6  2438               	addwf	segment_write_number@segment^0,w,c
  1485   0019D8  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  1486   0019DA  0E00               	movlw	0
  1487   0019DC  2039               	addwfc	(segment_write_number@segment+1)^0,w,c
  1488   0019DE  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  1489   0019E0  90D8               	bcf	status,0,c
  1490   0019E2  303A               	rrcf	segment_write_number@num^0,w,c
  1491   0019E4  0B01               	andlw	1
  1492   0019E6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1493   0019E8  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1494                           
  1495                           ;ECU_layer/7-Segment/ecu_7_segment.c: 46:         gpio_pin_write_logic(&(segment->segmen
      +                          t_pin[2]), (num >> 2) & 1);
  1496   0019EC  0E02               	movlw	2
  1497   0019EE  2438               	addwf	segment_write_number@segment^0,w,c
  1498   0019F0  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  1499   0019F2  0E00               	movlw	0
  1500   0019F4  2039               	addwfc	(segment_write_number@segment+1)^0,w,c
  1501   0019F6  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  1502   0019F8  403A               	rrncf	segment_write_number@num^0,w,c
  1503   0019FA  42E8               	rrncf	wreg,f,c
  1504   0019FC  0B3F               	andlw	63
  1505   0019FE  0B01               	andlw	1
  1506   001A00  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1507   001A02  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1508                           
  1509                           ;ECU_layer/7-Segment/ecu_7_segment.c: 47:         gpio_pin_write_logic(&(segment->segmen
      +                          t_pin[3]), (num >> 3) & 1);
  1510   001A06  0E03               	movlw	3
  1511   001A08  2438               	addwf	segment_write_number@segment^0,w,c
  1512   001A0A  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  1513   001A0C  0E00               	movlw	0
  1514   001A0E  2039               	addwfc	(segment_write_number@segment+1)^0,w,c
  1515   001A10  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  1516   001A12  383A               	swapf	segment_write_number@num^0,w,c
  1517   001A14  46E8               	rlncf	wreg,f,c
  1518   001A16  0B1F               	andlw	31
  1519   001A18  0B01               	andlw	1
  1520   001A1A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1521   001A1C  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1522   001A20                     l14:
  1523   001A20  0012               	return		;funcret
  1524   001A22                     __end_of_segment_write_number:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _application_initialize *****************
  1528 ;; Defined at:
  1529 ;;		line 159 in file "Traffic_Light.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 4
  1550 ;; This function calls:
  1551 ;;		_Led_initialize
  1552 ;;		_gpio_pin_direction_intialize
  1553 ;;		_lcd_pins_4_initialize
  1554 ;;		_segment_pin_initialize
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text5
  1561   001D3A                     __ptext5:
  1562                           	callstack 0
  1563   001D3A                     _application_initialize:
  1564                           	callstack 26
  1565   001D3A                     
  1566                           ;Traffic_Light.c: 161:     lcd_pins_4_initialize(&lcd_4bit);
  1567   001D3A  0E1F               	movlw	low _lcd_4bit
  1568   001D3C  6E40               	movwf	lcd_pins_4_initialize@lcd^0,c
  1569   001D3E  0E00               	movlw	high _lcd_4bit
  1570   001D40  6E41               	movwf	(lcd_pins_4_initialize@lcd+1)^0,c
  1571   001D42  EC54  F00A         	call	_lcd_pins_4_initialize	;wreg free
  1572                           
  1573                           ;Traffic_Light.c: 162:     segment_pin_initialize(&segment_1);
  1574   001D46  0E25               	movlw	low _segment_1
  1575   001D48  6E3C               	movwf	segment_pin_initialize@segment^0,c
  1576   001D4A  0E00               	movlw	high _segment_1
  1577   001D4C  6E3D               	movwf	(segment_pin_initialize@segment+1)^0,c
  1578   001D4E  ECC8  F00E         	call	_segment_pin_initialize	;wreg free
  1579                           
  1580                           ;Traffic_Light.c: 163:     Led_initialize(&led_green);
  1581   001D52  0E6D               	movlw	low _led_green
  1582   001D54  6E3C               	movwf	Led_initialize@led^0,c
  1583   001D56  0E00               	movlw	high _led_green
  1584   001D58  6E3D               	movwf	(Led_initialize@led+1)^0,c
  1585   001D5A  ECF9  F00D         	call	_Led_initialize	;wreg free
  1586                           
  1587                           ;Traffic_Light.c: 164:     Led_initialize(&led_yellow);
  1588   001D5E  0E2D               	movlw	low _led_yellow
  1589   001D60  6E3C               	movwf	Led_initialize@led^0,c
  1590   001D62  0E00               	movlw	high _led_yellow
  1591   001D64  6E3D               	movwf	(Led_initialize@led+1)^0,c
  1592   001D66  ECF9  F00D         	call	_Led_initialize	;wreg free
  1593                           
  1594                           ;Traffic_Light.c: 165:     Led_initialize(&led_red);
  1595   001D6A  0E2C               	movlw	low _led_red
  1596   001D6C  6E3C               	movwf	Led_initialize@led^0,c
  1597   001D6E  0E00               	movlw	high _led_red
  1598   001D70  6E3D               	movwf	(Led_initialize@led+1)^0,c
  1599   001D72  ECF9  F00D         	call	_Led_initialize	;wreg free
  1600                           
  1601                           ;Traffic_Light.c: 166:     gpio_pin_direction_intialize(&segment_enable_1);
  1602   001D76  0E2B               	movlw	low _segment_enable_1
  1603   001D78  6E2E               	movwf	gpio_pin_direction_intialize@Pin_Config^0,c
  1604   001D7A  0E00               	movlw	high _segment_enable_1
  1605   001D7C  6E2F               	movwf	(gpio_pin_direction_intialize@Pin_Config+1)^0,c
  1606   001D7E  ECC2  F009         	call	_gpio_pin_direction_intialize	;wreg free
  1607                           
  1608                           ;Traffic_Light.c: 167:     gpio_pin_direction_intialize(&segment_enable_2);
  1609   001D82  0E2A               	movlw	low _segment_enable_2
  1610   001D84  6E2E               	movwf	gpio_pin_direction_intialize@Pin_Config^0,c
  1611   001D86  0E00               	movlw	high _segment_enable_2
  1612   001D88  6E2F               	movwf	(gpio_pin_direction_intialize@Pin_Config+1)^0,c
  1613   001D8A  ECC2  F009         	call	_gpio_pin_direction_intialize	;wreg free
  1614   001D8E  0012               	return		;funcret
  1615   001D90                     __end_of_application_initialize:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _segment_pin_initialize *****************
  1619 ;; Defined at:
  1620 ;;		line 15 in file "ECU_layer/7-Segment/ecu_7_segment.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  segment         2   14[COMRAM] PTR const struct .
  1623 ;;		 -> segment_1(5), 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  ret             1    0        unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 2
  1642 ;; This function calls:
  1643 ;;		_gpio_pin_intialize
  1644 ;; This function is called by:
  1645 ;;		_application_initialize
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text6
  1650   001D90                     __ptext6:
  1651                           	callstack 0
  1652   001D90                     _segment_pin_initialize:
  1653                           	callstack 27
  1654   001D90                     
  1655                           ;ECU_layer/7-Segment/ecu_7_segment.c: 17:     if(((void*)0) == segment)
  1656   001D90  503C               	movf	segment_pin_initialize@segment^0,w,c
  1657   001D92  103D               	iorwf	(segment_pin_initialize@segment+1)^0,w,c
  1658   001D94  A4D8               	btfss	status,2,c
  1659   001D96  EFCF  F00E         	goto	u1311
  1660   001D9A  EFD1  F00E         	goto	u1310
  1661   001D9E                     u1311:
  1662   001D9E  EFD3  F00E         	goto	l2134
  1663   001DA2                     u1310:
  1664   001DA2  EFF1  F00E         	goto	l9
  1665   001DA6                     l2134:
  1666                           
  1667                           ;ECU_layer/7-Segment/ecu_7_segment.c: 20:         gpio_pin_intialize(&(segment->segment_
      +                          pin[0]));
  1668   001DA6  C03C  F038         	movff	segment_pin_initialize@segment,gpio_pin_intialize@Pin_Config
  1669   001DAA  C03D  F039         	movff	segment_pin_initialize@segment+1,gpio_pin_intialize@Pin_Config+1
  1670   001DAE  EC32  F00E         	call	_gpio_pin_intialize	;wreg free
  1671                           
  1672                           ;ECU_layer/7-Segment/ecu_7_segment.c: 21:         gpio_pin_intialize(&(segment->segment_
      +                          pin[1]));
  1673   001DB2  0E01               	movlw	1
  1674   001DB4  243C               	addwf	segment_pin_initialize@segment^0,w,c
  1675   001DB6  6E38               	movwf	gpio_pin_intialize@Pin_Config^0,c
  1676   001DB8  0E00               	movlw	0
  1677   001DBA  203D               	addwfc	(segment_pin_initialize@segment+1)^0,w,c
  1678   001DBC  6E39               	movwf	(gpio_pin_intialize@Pin_Config+1)^0,c
  1679   001DBE  EC32  F00E         	call	_gpio_pin_intialize	;wreg free
  1680                           
  1681                           ;ECU_layer/7-Segment/ecu_7_segment.c: 22:         gpio_pin_intialize(&(segment->segment_
      +                          pin[2]));
  1682   001DC2  0E02               	movlw	2
  1683   001DC4  243C               	addwf	segment_pin_initialize@segment^0,w,c
  1684   001DC6  6E38               	movwf	gpio_pin_intialize@Pin_Config^0,c
  1685   001DC8  0E00               	movlw	0
  1686   001DCA  203D               	addwfc	(segment_pin_initialize@segment+1)^0,w,c
  1687   001DCC  6E39               	movwf	(gpio_pin_intialize@Pin_Config+1)^0,c
  1688   001DCE  EC32  F00E         	call	_gpio_pin_intialize	;wreg free
  1689                           
  1690                           ;ECU_layer/7-Segment/ecu_7_segment.c: 23:         gpio_pin_intialize(&(segment->segment_
      +                          pin[3]));
  1691   001DD2  0E03               	movlw	3
  1692   001DD4  243C               	addwf	segment_pin_initialize@segment^0,w,c
  1693   001DD6  6E38               	movwf	gpio_pin_intialize@Pin_Config^0,c
  1694   001DD8  0E00               	movlw	0
  1695   001DDA  203D               	addwfc	(segment_pin_initialize@segment+1)^0,w,c
  1696   001DDC  6E39               	movwf	(gpio_pin_intialize@Pin_Config+1)^0,c
  1697   001DDE  EC32  F00E         	call	_gpio_pin_intialize	;wreg free
  1698   001DE2                     l9:
  1699   001DE2  0012               	return		;funcret
  1700   001DE4                     __end_of_segment_pin_initialize:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _lcd_pins_4_initialize *****************
  1704 ;; Defined at:
  1705 ;;		line 21 in file "ECU_layer/LCD/ecu_lcd.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  lcd             2   18[COMRAM] PTR const struct .
  1708 ;;		 -> lcd_4bit(6), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  cnt_pin         1   23[COMRAM] unsigned char 
  1711 ;;  ret             1   22[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      unsigned char 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;Total ram usage:        6 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; Hardware stack levels required when called: 3
  1728 ;; This function calls:
  1729 ;;		_gpio_pin_intialize
  1730 ;;		_send_4_bit_command
  1731 ;; This function is called by:
  1732 ;;		_application_initialize
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text7
  1737   0014A8                     __ptext7:
  1738                           	callstack 0
  1739   0014A8                     _lcd_pins_4_initialize:
  1740                           	callstack 26
  1741   0014A8                     
  1742                           ;ECU_layer/LCD/ecu_lcd.c: 23:     if(((void*)0) == lcd)
  1743   0014A8  5040               	movf	lcd_pins_4_initialize@lcd^0,w,c
  1744   0014AA  1041               	iorwf	(lcd_pins_4_initialize@lcd+1)^0,w,c
  1745   0014AC  A4D8               	btfss	status,2,c
  1746   0014AE  EF5B  F00A         	goto	u1321
  1747   0014B2  EF5D  F00A         	goto	u1320
  1748   0014B6                     u1321:
  1749   0014B6  EF5F  F00A         	goto	l2144
  1750   0014BA                     u1320:
  1751   0014BA  EFE3  F00A         	goto	l45
  1752   0014BE                     l2144:
  1753                           
  1754                           ;ECU_layer/LCD/ecu_lcd.c: 26:     {;ECU_layer/LCD/ecu_lcd.c: 27:         ret = gpio_pin_
      +                          intialize(&(lcd->rs_lcd));
  1755   0014BE  C040  F038         	movff	lcd_pins_4_initialize@lcd,gpio_pin_intialize@Pin_Config
  1756   0014C2  C041  F039         	movff	lcd_pins_4_initialize@lcd+1,gpio_pin_intialize@Pin_Config+1
  1757   0014C6  EC32  F00E         	call	_gpio_pin_intialize	;wreg free
  1758   0014CA  6E44               	movwf	lcd_pins_4_initialize@ret^0,c
  1759                           
  1760                           ;ECU_layer/LCD/ecu_lcd.c: 28:         ret = gpio_pin_intialize(&(lcd->en_lcd));
  1761   0014CC  0E05               	movlw	5
  1762   0014CE  2440               	addwf	lcd_pins_4_initialize@lcd^0,w,c
  1763   0014D0  6E38               	movwf	gpio_pin_intialize@Pin_Config^0,c
  1764   0014D2  0E00               	movlw	0
  1765   0014D4  2041               	addwfc	(lcd_pins_4_initialize@lcd+1)^0,w,c
  1766   0014D6  6E39               	movwf	(gpio_pin_intialize@Pin_Config+1)^0,c
  1767   0014D8  EC32  F00E         	call	_gpio_pin_intialize	;wreg free
  1768   0014DC  6E44               	movwf	lcd_pins_4_initialize@ret^0,c
  1769   0014DE                     
  1770                           ;ECU_layer/LCD/ecu_lcd.c: 29:         for(uint8 cnt_pin = 0; cnt_pin < 4; cnt_pin++)
  1771   0014DE  0E00               	movlw	0
  1772   0014E0  6E45               	movwf	lcd_pins_4_initialize@cnt_pin^0,c
  1773   0014E2                     l2152:
  1774   0014E2  5045               	movf	lcd_pins_4_initialize@cnt_pin^0,w,c
  1775   0014E4  2440               	addwf	lcd_pins_4_initialize@lcd^0,w,c
  1776   0014E6  6E42               	movwf	??_lcd_pins_4_initialize^0,c
  1777   0014E8  0E00               	movlw	0
  1778   0014EA  2041               	addwfc	(lcd_pins_4_initialize@lcd+1)^0,w,c
  1779   0014EC  6E43               	movwf	(??_lcd_pins_4_initialize+1)^0,c
  1780   0014EE  0E01               	movlw	1
  1781   0014F0  2442               	addwf	??_lcd_pins_4_initialize^0,w,c
  1782   0014F2  6E38               	movwf	gpio_pin_intialize@Pin_Config^0,c
  1783   0014F4  0E00               	movlw	0
  1784   0014F6  2043               	addwfc	(??_lcd_pins_4_initialize+1)^0,w,c
  1785   0014F8  6E39               	movwf	(gpio_pin_intialize@Pin_Config+1)^0,c
  1786   0014FA  EC32  F00E         	call	_gpio_pin_intialize	;wreg free
  1787   0014FE  2A45               	incf	lcd_pins_4_initialize@cnt_pin^0,f,c
  1788   001500  0E03               	movlw	3
  1789   001502  6445               	cpfsgt	lcd_pins_4_initialize@cnt_pin^0,c
  1790   001504  EF86  F00A         	goto	u1331
  1791   001508  EF88  F00A         	goto	u1330
  1792   00150C                     u1331:
  1793   00150C  EF71  F00A         	goto	l2152
  1794   001510                     u1330:
  1795   001510                     
  1796                           ;ECU_layer/LCD/ecu_lcd.c: 32:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  1797   001510  0E1A               	movlw	26
  1798   001512  6E42               	movwf	??_lcd_pins_4_initialize^0,c
  1799   001514  0EF8               	movlw	248
  1800   001516                     u1987:
  1801   001516  2EE8               	decfsz	wreg,f,c
  1802   001518  D7FE               	bra	u1987
  1803   00151A  2E42               	decfsz	??_lcd_pins_4_initialize^0,f,c
  1804   00151C  D7FC               	bra	u1987
  1805   00151E  D000               	nop2	
  1806   001520  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1807   001524  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1808   001528  0E38               	movlw	56
  1809   00152A  6E3E               	movwf	send_4_bit_command@command^0,c
  1810   00152C  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1811   001530                     
  1812                           ;ECU_layer/LCD/ecu_lcd.c: 34:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1813   001530  0E07               	movlw	7
  1814   001532  6E42               	movwf	??_lcd_pins_4_initialize^0,c
  1815   001534  0E7D               	movlw	125
  1816   001536                     u1997:
  1817   001536  2EE8               	decfsz	wreg,f,c
  1818   001538  D7FE               	bra	u1997
  1819   00153A  2E42               	decfsz	??_lcd_pins_4_initialize^0,f,c
  1820   00153C  D7FC               	bra	u1997
  1821   00153E  F000               	nop	
  1822   001540  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1823   001544  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1824   001548  0E38               	movlw	56
  1825   00154A  6E3E               	movwf	send_4_bit_command@command^0,c
  1826   00154C  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1827   001550                     
  1828                           ;ECU_layer/LCD/ecu_lcd.c: 36:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
  1829   001550  0E32               	movlw	50
  1830   001552                     u2007:
  1831   001552  2EE8               	decfsz	wreg,f,c
  1832   001554  D7FE               	bra	u2007
  1833   001556  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1834   00155A  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1835   00155E  0E38               	movlw	56
  1836   001560  6E3E               	movwf	send_4_bit_command@command^0,c
  1837   001562  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1838   001566  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1839   00156A  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1840   00156E  0E01               	movlw	1
  1841   001570  6E3E               	movwf	send_4_bit_command@command^0,c
  1842   001572  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1843   001576  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1844   00157A  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1845   00157E  0E02               	movlw	2
  1846   001580  6E3E               	movwf	send_4_bit_command@command^0,c
  1847   001582  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1848   001586  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1849   00158A  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1850   00158E  0E06               	movlw	6
  1851   001590  6E3E               	movwf	send_4_bit_command@command^0,c
  1852   001592  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1853   001596  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1854   00159A  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1855   00159E  0E0C               	movlw	12
  1856   0015A0  6E3E               	movwf	send_4_bit_command@command^0,c
  1857   0015A2  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1858   0015A6  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1859   0015AA  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1860   0015AE  0E28               	movlw	40
  1861   0015B0  6E3E               	movwf	send_4_bit_command@command^0,c
  1862   0015B2  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1863   0015B6                     
  1864                           ;ECU_layer/LCD/ecu_lcd.c: 43:         send_4_bit_command(lcd, 0x80);
  1865   0015B6  C040  F03C         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1866   0015BA  C041  F03D         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1867   0015BE  0E80               	movlw	128
  1868   0015C0  6E3E               	movwf	send_4_bit_command@command^0,c
  1869   0015C2  ECC0  F00D         	call	_send_4_bit_command	;wreg free
  1870   0015C6                     l45:
  1871   0015C6  0012               	return		;funcret
  1872   0015C8                     __end_of_lcd_pins_4_initialize:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _send_4_bit_command *****************
  1876 ;; Defined at:
  1877 ;;		line 47 in file "ECU_layer/LCD/ecu_lcd.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  lcd             2   14[COMRAM] PTR const struct .
  1880 ;;		 -> lcd_4bit(6), 
  1881 ;;  command         1   16[COMRAM] unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  ret             1   17[COMRAM] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      unsigned char 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1893 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;Total ram usage:        4 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 2
  1900 ;; This function calls:
  1901 ;;		_gpio_pin_write_logic
  1902 ;;		_send_4_bit_enable
  1903 ;;		_send_4_bit_help
  1904 ;; This function is called by:
  1905 ;;		_lcd_pins_4_initialize
  1906 ;;		_lcd_4_bit_set_cursor
  1907 ;;		_send_4_bit_custome_char_data_pos
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text8
  1912   001B80                     __ptext8:
  1913                           	callstack 0
  1914   001B80                     _send_4_bit_command:
  1915                           	callstack 26
  1916   001B80                     
  1917                           ;ECU_layer/LCD/ecu_lcd.c: 49:     if(((void*)0) == lcd)
  1918   001B80  503C               	movf	send_4_bit_command@lcd^0,w,c
  1919   001B82  103D               	iorwf	(send_4_bit_command@lcd+1)^0,w,c
  1920   001B84  A4D8               	btfss	status,2,c
  1921   001B86  EFC7  F00D         	goto	u1271
  1922   001B8A  EFC9  F00D         	goto	u1270
  1923   001B8E                     u1271:
  1924   001B8E  EFCD  F00D         	goto	l2096
  1925   001B92                     u1270:
  1926   001B92                     
  1927                           ;ECU_layer/LCD/ecu_lcd.c: 50:         ret = (Std_ReturnType)0x00;
  1928   001B92  0E00               	movlw	0
  1929   001B94  6E3F               	movwf	send_4_bit_command@ret^0,c
  1930   001B96  EFF7  F00D         	goto	l2098
  1931   001B9A                     l2096:
  1932                           
  1933                           ;ECU_layer/LCD/ecu_lcd.c: 52:     {;ECU_layer/LCD/ecu_lcd.c: 53:         ret = gpio_pin_
      +                          write_logic(&(lcd->rs_lcd),LOW);
  1934   001B9A  C03C  F02E         	movff	send_4_bit_command@lcd,gpio_pin_write_logic@Pin_Config
  1935   001B9E  C03D  F02F         	movff	send_4_bit_command@lcd+1,gpio_pin_write_logic@Pin_Config+1
  1936   001BA2  0E00               	movlw	0
  1937   001BA4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1938   001BA6  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  1939   001BAA  6E3F               	movwf	send_4_bit_command@ret^0,c
  1940                           
  1941                           ;ECU_layer/LCD/ecu_lcd.c: 54:         ret = send_4_bit_help(lcd,command >> 4);
  1942   001BAC  C03C  F038         	movff	send_4_bit_command@lcd,send_4_bit_help@lcd
  1943   001BB0  C03D  F039         	movff	send_4_bit_command@lcd+1,send_4_bit_help@lcd+1
  1944   001BB4  383E               	swapf	send_4_bit_command@command^0,w,c
  1945   001BB6  0B0F               	andlw	15
  1946   001BB8  6E3A               	movwf	send_4_bit_help@data_command^0,c
  1947   001BBA  EC92  F00C         	call	_send_4_bit_help	;wreg free
  1948   001BBE  6E3F               	movwf	send_4_bit_command@ret^0,c
  1949                           
  1950                           ;ECU_layer/LCD/ecu_lcd.c: 55:         ret = send_4_bit_enable(lcd);
  1951   001BC0  C03C  F038         	movff	send_4_bit_command@lcd,send_4_bit_enable@lcd
  1952   001BC4  C03D  F039         	movff	send_4_bit_command@lcd+1,send_4_bit_enable@lcd+1
  1953   001BC8  ECF2  F00E         	call	_send_4_bit_enable	;wreg free
  1954   001BCC  6E3F               	movwf	send_4_bit_command@ret^0,c
  1955                           
  1956                           ;ECU_layer/LCD/ecu_lcd.c: 56:         ret = send_4_bit_help(lcd,command);
  1957   001BCE  C03C  F038         	movff	send_4_bit_command@lcd,send_4_bit_help@lcd
  1958   001BD2  C03D  F039         	movff	send_4_bit_command@lcd+1,send_4_bit_help@lcd+1
  1959   001BD6  C03E  F03A         	movff	send_4_bit_command@command,send_4_bit_help@data_command
  1960   001BDA  EC92  F00C         	call	_send_4_bit_help	;wreg free
  1961   001BDE  6E3F               	movwf	send_4_bit_command@ret^0,c
  1962                           
  1963                           ;ECU_layer/LCD/ecu_lcd.c: 57:         ret = send_4_bit_enable(lcd);
  1964   001BE0  C03C  F038         	movff	send_4_bit_command@lcd,send_4_bit_enable@lcd
  1965   001BE4  C03D  F039         	movff	send_4_bit_command@lcd+1,send_4_bit_enable@lcd+1
  1966   001BE8  ECF2  F00E         	call	_send_4_bit_enable	;wreg free
  1967   001BEC  6E3F               	movwf	send_4_bit_command@ret^0,c
  1968   001BEE                     l2098:
  1969                           
  1970                           ;ECU_layer/LCD/ecu_lcd.c: 59:              return ret;
  1971   001BEE  503F               	movf	send_4_bit_command@ret^0,w,c
  1972   001BF0  0012               	return		;funcret
  1973   001BF2                     __end_of_send_4_bit_command:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _send_4_bit_help *****************
  1977 ;; Defined at:
  1978 ;;		line 125 in file "ECU_layer/LCD/ecu_lcd.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  lcd             2   10[COMRAM] PTR const struct .
  1981 ;;		 -> lcd_4bit(6), 
  1982 ;;  data_command    1   12[COMRAM] unsigned char 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  ret             1   13[COMRAM] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1994 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;Total ram usage:        4 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 1
  2001 ;; This function calls:
  2002 ;;		_gpio_pin_write_logic
  2003 ;; This function is called by:
  2004 ;;		_send_4_bit_command
  2005 ;;		_send_4_bit_char_data
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text9
  2010   001924                     __ptext9:
  2011                           	callstack 0
  2012   001924                     _send_4_bit_help:
  2013                           	callstack 27
  2014   001924                     
  2015                           ;ECU_layer/LCD/ecu_lcd.c: 127:     if(((void*)0) == lcd)
  2016   001924  5038               	movf	send_4_bit_help@lcd^0,w,c
  2017   001926  1039               	iorwf	(send_4_bit_help@lcd+1)^0,w,c
  2018   001928  A4D8               	btfss	status,2,c
  2019   00192A  EF99  F00C         	goto	u1161
  2020   00192E  EF9B  F00C         	goto	u1160
  2021   001932                     u1161:
  2022   001932  EF9F  F00C         	goto	l2022
  2023   001936                     u1160:
  2024   001936                     
  2025                           ;ECU_layer/LCD/ecu_lcd.c: 128:         ret = (Std_ReturnType)0x00;
  2026   001936  0E00               	movlw	0
  2027   001938  6E3B               	movwf	send_4_bit_help@ret^0,c
  2028   00193A  EFD4  F00C         	goto	l2024
  2029   00193E                     l2022:
  2030                           
  2031                           ;ECU_layer/LCD/ecu_lcd.c: 130:     {;ECU_layer/LCD/ecu_lcd.c: 131:            ret = gpio
      +                          _pin_write_logic(&(lcd->lcd_pin[0]),((data_command >> 0)& (uint8)0x01));
  2032   00193E  0E01               	movlw	1
  2033   001940  2438               	addwf	send_4_bit_help@lcd^0,w,c
  2034   001942  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  2035   001944  0E00               	movlw	0
  2036   001946  2039               	addwfc	(send_4_bit_help@lcd+1)^0,w,c
  2037   001948  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  2038   00194A  503A               	movf	send_4_bit_help@data_command^0,w,c
  2039   00194C  0B01               	andlw	1
  2040   00194E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2041   001950  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2042   001954  6E3B               	movwf	send_4_bit_help@ret^0,c
  2043                           
  2044                           ;ECU_layer/LCD/ecu_lcd.c: 132:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[1]),
      +                          ((data_command >> 1)& (uint8)0x01));
  2045   001956  0E02               	movlw	2
  2046   001958  2438               	addwf	send_4_bit_help@lcd^0,w,c
  2047   00195A  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  2048   00195C  0E00               	movlw	0
  2049   00195E  2039               	addwfc	(send_4_bit_help@lcd+1)^0,w,c
  2050   001960  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  2051   001962  90D8               	bcf	status,0,c
  2052   001964  303A               	rrcf	send_4_bit_help@data_command^0,w,c
  2053   001966  0B01               	andlw	1
  2054   001968  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2055   00196A  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2056   00196E  6E3B               	movwf	send_4_bit_help@ret^0,c
  2057                           
  2058                           ;ECU_layer/LCD/ecu_lcd.c: 133:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[2]),
      +                          ((data_command >> 2)& (uint8)0x01));
  2059   001970  0E03               	movlw	3
  2060   001972  2438               	addwf	send_4_bit_help@lcd^0,w,c
  2061   001974  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  2062   001976  0E00               	movlw	0
  2063   001978  2039               	addwfc	(send_4_bit_help@lcd+1)^0,w,c
  2064   00197A  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  2065   00197C  403A               	rrncf	send_4_bit_help@data_command^0,w,c
  2066   00197E  42E8               	rrncf	wreg,f,c
  2067   001980  0B3F               	andlw	63
  2068   001982  0B01               	andlw	1
  2069   001984  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2070   001986  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2071   00198A  6E3B               	movwf	send_4_bit_help@ret^0,c
  2072                           
  2073                           ;ECU_layer/LCD/ecu_lcd.c: 134:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[3]),
      +                          ((data_command >> 3)& (uint8)0x01));
  2074   00198C  0E04               	movlw	4
  2075   00198E  2438               	addwf	send_4_bit_help@lcd^0,w,c
  2076   001990  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  2077   001992  0E00               	movlw	0
  2078   001994  2039               	addwfc	(send_4_bit_help@lcd+1)^0,w,c
  2079   001996  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  2080   001998  383A               	swapf	send_4_bit_help@data_command^0,w,c
  2081   00199A  46E8               	rlncf	wreg,f,c
  2082   00199C  0B1F               	andlw	31
  2083   00199E  0B01               	andlw	1
  2084   0019A0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2085   0019A2  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2086   0019A6  6E3B               	movwf	send_4_bit_help@ret^0,c
  2087   0019A8                     l2024:
  2088                           
  2089                           ;ECU_layer/LCD/ecu_lcd.c: 136:              return ret;
  2090   0019A8  503B               	movf	send_4_bit_help@ret^0,w,c
  2091   0019AA  0012               	return		;funcret
  2092   0019AC                     __end_of_send_4_bit_help:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _send_4_bit_enable *****************
  2096 ;; Defined at:
  2097 ;;		line 75 in file "ECU_layer/LCD/ecu_lcd.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  lcd             2   10[COMRAM] PTR const struct .
  2100 ;;		 -> lcd_4bit(6), 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  ret             1   12[COMRAM] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      unsigned char 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;Total ram usage:        3 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 1
  2119 ;; This function calls:
  2120 ;;		_gpio_pin_write_logic
  2121 ;; This function is called by:
  2122 ;;		_send_4_bit_command
  2123 ;;		_send_4_bit_char_data
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text10
  2128   001DE4                     __ptext10:
  2129                           	callstack 0
  2130   001DE4                     _send_4_bit_enable:
  2131                           	callstack 27
  2132   001DE4                     
  2133                           ;ECU_layer/LCD/ecu_lcd.c: 77:     if(((void*)0) == lcd)
  2134   001DE4  5038               	movf	send_4_bit_enable@lcd^0,w,c
  2135   001DE6  1039               	iorwf	(send_4_bit_enable@lcd+1)^0,w,c
  2136   001DE8  A4D8               	btfss	status,2,c
  2137   001DEA  EFF9  F00E         	goto	u1171
  2138   001DEE  EFFB  F00E         	goto	u1170
  2139   001DF2                     u1171:
  2140   001DF2  EFFF  F00E         	goto	l2034
  2141   001DF6                     u1170:
  2142   001DF6                     
  2143                           ;ECU_layer/LCD/ecu_lcd.c: 78:         ret = (Std_ReturnType)0x00;
  2144   001DF6  0E00               	movlw	0
  2145   001DF8  6E3A               	movwf	send_4_bit_enable@ret^0,c
  2146   001DFA  EF17  F00F         	goto	l2038
  2147   001DFE                     l2034:
  2148   001DFE  0E05               	movlw	5
  2149   001E00  2438               	addwf	send_4_bit_enable@lcd^0,w,c
  2150   001E02  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  2151   001E04  0E00               	movlw	0
  2152   001E06  2039               	addwfc	(send_4_bit_enable@lcd+1)^0,w,c
  2153   001E08  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  2154   001E0A  0E01               	movlw	1
  2155   001E0C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2156   001E0E  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2157   001E12                     
  2158                           ;ECU_layer/LCD/ecu_lcd.c: 82:         _delay((unsigned long)((5)*(4000000UL/4000000.0)))
      +                          ;
  2159   001E12  D000               	nop2		;2 cycle nop
  2160   001E14  D000               	nop2		;2 cycle nop
  2161   001E16  F000               	nop	
  2162                           
  2163                           ;ECU_layer/LCD/ecu_lcd.c: 83:         ret = gpio_pin_write_logic(&(lcd->en_lcd),LOW);
  2164   001E18  0E05               	movlw	5
  2165   001E1A  2438               	addwf	send_4_bit_enable@lcd^0,w,c
  2166   001E1C  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  2167   001E1E  0E00               	movlw	0
  2168   001E20  2039               	addwfc	(send_4_bit_enable@lcd+1)^0,w,c
  2169   001E22  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  2170   001E24  0E00               	movlw	0
  2171   001E26  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2172   001E28  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2173   001E2C  6E3A               	movwf	send_4_bit_enable@ret^0,c
  2174   001E2E                     l2038:
  2175                           
  2176                           ;ECU_layer/LCD/ecu_lcd.c: 85:         return ret;
  2177   001E2E  503A               	movf	send_4_bit_enable@ret^0,w,c
  2178   001E30  0012               	return		;funcret
  2179   001E32                     __end_of_send_4_bit_enable:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _Led_initialize *****************
  2183 ;; Defined at:
  2184 ;;		line 16 in file "ECU_layer/LED/ecu_led.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  led             2   14[COMRAM] PTR const struct .
  2187 ;;		 -> led_yellow(1), led_red(1), led_green(1), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  led_pin         1   17[COMRAM] struct .
  2190 ;;  ret             1    0        unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      unsigned char 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;Total ram usage:        4 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 2
  2207 ;; This function calls:
  2208 ;;		_gpio_pin_intialize
  2209 ;; This function is called by:
  2210 ;;		_application_initialize
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text11
  2215   001BF2                     __ptext11:
  2216                           	callstack 0
  2217   001BF2                     _Led_initialize:
  2218                           	callstack 27
  2219   001BF2                     
  2220                           ;ECU_layer/LED/ecu_led.c: 18:     if(((void*)0) == led)
  2221   001BF2  503C               	movf	Led_initialize@led^0,w,c
  2222   001BF4  103D               	iorwf	(Led_initialize@led+1)^0,w,c
  2223   001BF6  A4D8               	btfss	status,2,c
  2224   001BF8  EF00  F00E         	goto	u1481
  2225   001BFC  EF02  F00E         	goto	u1480
  2226   001C00                     u1481:
  2227   001C00  EF04  F00E         	goto	l210
  2228   001C04                     u1480:
  2229   001C04  EF31  F00E         	goto	l214
  2230   001C08                     l210:
  2231                           
  2232                           ;ECU_layer/LED/ecu_led.c: 21:     {;ECU_layer/LED/ecu_led.c: 22:      Pin_Config_t led_p
      +                          in = {led->port, led->pin, OUTPUT, led->led_st};
  2233   001C08  C06C  F03F         	movff	Led_initialize@F3048,Led_initialize@led_pin
  2234   001C0C  C03C  FFD9         	movff	Led_initialize@led,fsr2l
  2235   001C10  C03D  FFDA         	movff	Led_initialize@led+1,fsr2h
  2236   001C14  50DF               	movf	223,w,c
  2237   001C16  0B0F               	andlw	15
  2238   001C18  6E3E               	movwf	??_Led_initialize^0,c
  2239   001C1A  503F               	movf	Led_initialize@led_pin^0,w,c
  2240   001C1C  183E               	xorwf	??_Led_initialize^0,w,c
  2241   001C1E  0BF8               	andlw	-8
  2242   001C20  183E               	xorwf	??_Led_initialize^0,w,c
  2243   001C22  6E3F               	movwf	Led_initialize@led_pin^0,c
  2244   001C24  C03C  FFD9         	movff	Led_initialize@led,fsr2l
  2245   001C28  C03D  FFDA         	movff	Led_initialize@led+1,fsr2h
  2246   001C2C  38DF               	swapf	223,w,c
  2247   001C2E  0B07               	andlw	7
  2248   001C30  6E3E               	movwf	??_Led_initialize^0,c
  2249   001C32  463E               	rlncf	??_Led_initialize^0,f,c
  2250   001C34  463E               	rlncf	??_Led_initialize^0,f,c
  2251   001C36  463E               	rlncf	??_Led_initialize^0,f,c
  2252   001C38  503F               	movf	Led_initialize@led_pin^0,w,c
  2253   001C3A  183E               	xorwf	??_Led_initialize^0,w,c
  2254   001C3C  0BC7               	andlw	-57
  2255   001C3E  183E               	xorwf	??_Led_initialize^0,w,c
  2256   001C40  6E3F               	movwf	Led_initialize@led_pin^0,c
  2257   001C42  9C3F               	bcf	Led_initialize@led_pin^0,6,c
  2258   001C44  C03C  FFD9         	movff	Led_initialize@led,fsr2l
  2259   001C48  C03D  FFDA         	movff	Led_initialize@led+1,fsr2h
  2260   001C4C  AEDF               	btfss	indf2,7,c
  2261   001C4E  D002               	bra	u1495
  2262   001C50  8E3F               	bsf	Led_initialize@led_pin^0,7,c
  2263   001C52  D001               	bra	u1497
  2264   001C54                     u1495:
  2265   001C54  9E3F               	bcf	Led_initialize@led_pin^0,7,c
  2266   001C56                     u1497:
  2267   001C56                     
  2268                           ;ECU_layer/LED/ecu_led.c: 23:      gpio_pin_intialize(&led_pin);
  2269   001C56  0E3F               	movlw	low Led_initialize@led_pin
  2270   001C58  6E38               	movwf	gpio_pin_intialize@Pin_Config^0,c
  2271   001C5A  0E00               	movlw	high Led_initialize@led_pin
  2272   001C5C  6E39               	movwf	(gpio_pin_intialize@Pin_Config+1)^0,c
  2273   001C5E  EC32  F00E         	call	_gpio_pin_intialize	;wreg free
  2274   001C62                     l214:
  2275   001C62  0012               	return		;funcret
  2276   001C64                     __end_of_Led_initialize:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _gpio_pin_intialize *****************
  2280 ;; Defined at:
  2281 ;;		line 136 in file "MCAL_layer/GPIO/gpio.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  Pin_Config      2   10[COMRAM] PTR const struct .
  2284 ;;		 -> lcd_4bit.lcd_pin(4), lcd_4bit(6), segment_1.segment_pin(4), segment_1(5), 
  2285 ;;		 -> Led_initialize@led_pin(1), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  ret             1   13[COMRAM] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      unsigned char 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;Total ram usage:        4 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 1
  2304 ;; This function calls:
  2305 ;;		_gpio_pin_direction_intialize
  2306 ;;		_gpio_pin_write_logic
  2307 ;; This function is called by:
  2308 ;;		_segment_pin_initialize
  2309 ;;		_lcd_pins_4_initialize
  2310 ;;		_Led_initialize
  2311 ;;		_lcd_pins_8_initialize
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text12
  2316   001C64                     __ptext12:
  2317                           	callstack 0
  2318   001C64                     _gpio_pin_intialize:
  2319                           	callstack 27
  2320   001C64                     
  2321                           ;MCAL_layer/GPIO/gpio.c: 138:     if(((void*)0) == Pin_Config || Pin_Config->pin > 8)
  2322   001C64  5038               	movf	gpio_pin_intialize@Pin_Config^0,w,c
  2323   001C66  1039               	iorwf	(gpio_pin_intialize@Pin_Config+1)^0,w,c
  2324   001C68  B4D8               	btfsc	status,2,c
  2325   001C6A  EF39  F00E         	goto	u1251
  2326   001C6E  EF3B  F00E         	goto	u1250
  2327   001C72                     u1251:
  2328   001C72  EF4C  F00E         	goto	l2082
  2329   001C76                     u1250:
  2330   001C76  C038  FFD9         	movff	gpio_pin_intialize@Pin_Config,fsr2l
  2331   001C7A  C039  FFDA         	movff	gpio_pin_intialize@Pin_Config+1,fsr2h
  2332   001C7E  30DF               	rrcf	223,w,c
  2333   001C80  32E8               	rrcf	wreg,f,c
  2334   001C82  32E8               	rrcf	wreg,f,c
  2335   001C84  0B07               	andlw	7
  2336   001C86  6E3A               	movwf	??_gpio_pin_intialize^0,c
  2337   001C88  0E08               	movlw	8
  2338   001C8A  643A               	cpfsgt	??_gpio_pin_intialize^0,c
  2339   001C8C  EF4A  F00E         	goto	u1261
  2340   001C90  EF4C  F00E         	goto	u1260
  2341   001C94                     u1261:
  2342   001C94  EF50  F00E         	goto	l2084
  2343   001C98                     u1260:
  2344   001C98                     l2082:
  2345                           
  2346                           ;MCAL_layer/GPIO/gpio.c: 139:         ret = (Std_ReturnType)0x00;
  2347   001C98  0E00               	movlw	0
  2348   001C9A  6E3B               	movwf	gpio_pin_intialize@ret^0,c
  2349   001C9C  EF66  F00E         	goto	l2086
  2350   001CA0                     l2084:
  2351                           
  2352                           ;MCAL_layer/GPIO/gpio.c: 141:     {;MCAL_layer/GPIO/gpio.c: 142:        ret = gpio_pin_d
      +                          irection_intialize(Pin_Config);
  2353   001CA0  C038  F02E         	movff	gpio_pin_intialize@Pin_Config,gpio_pin_direction_intialize@Pin_Config
  2354   001CA4  C039  F02F         	movff	gpio_pin_intialize@Pin_Config+1,gpio_pin_direction_intialize@Pin_Config+1
  2355   001CA8  ECC2  F009         	call	_gpio_pin_direction_intialize	;wreg free
  2356   001CAC  6E3B               	movwf	gpio_pin_intialize@ret^0,c
  2357                           
  2358                           ;MCAL_layer/GPIO/gpio.c: 143:        ret = gpio_pin_write_logic(Pin_Config,Pin_Config->l
      +                          ogic);
  2359   001CAE  C038  F02E         	movff	gpio_pin_intialize@Pin_Config,gpio_pin_write_logic@Pin_Config
  2360   001CB2  C039  F02F         	movff	gpio_pin_intialize@Pin_Config+1,gpio_pin_write_logic@Pin_Config+1
  2361   001CB6  C038  FFD9         	movff	gpio_pin_intialize@Pin_Config,fsr2l
  2362   001CBA  C039  FFDA         	movff	gpio_pin_intialize@Pin_Config+1,fsr2h
  2363   001CBE  0E00               	movlw	0
  2364   001CC0  BEDF               	btfsc	indf2,7,c
  2365   001CC2  0E01               	movlw	1
  2366   001CC4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2367   001CC6  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2368   001CCA  6E3B               	movwf	gpio_pin_intialize@ret^0,c
  2369   001CCC                     l2086:
  2370                           
  2371                           ;MCAL_layer/GPIO/gpio.c: 146:         return ret;
  2372   001CCC  503B               	movf	gpio_pin_intialize@ret^0,w,c
  2373   001CCE  0012               	return		;funcret
  2374   001CD0                     __end_of_gpio_pin_intialize:
  2375                           	callstack 0
  2376                           
  2377 ;; *************** function _gpio_pin_direction_intialize *****************
  2378 ;; Defined at:
  2379 ;;		line 31 in file "MCAL_layer/GPIO/gpio.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  Pin_Config      2    0[COMRAM] PTR const struct .
  2382 ;;		 -> segment_enable_1(1), segment_enable_2(1), lcd_4bit.lcd_pin(4), lcd_4bit(6), 
  2383 ;;		 -> segment_1.segment_pin(4), segment_1(5), Led_initialize@led_pin(1), 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  ret             1    8[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      unsigned char 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;Total ram usage:        9 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_gpio_pin_intialize
  2405 ;;		_application_initialize
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text13
  2410   001384                     __ptext13:
  2411                           	callstack 0
  2412   001384                     _gpio_pin_direction_intialize:
  2413                           	callstack 27
  2414   001384                     
  2415                           ;MCAL_layer/GPIO/gpio.c: 32:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2416   001384  0E01               	movlw	1
  2417   001386  6E36               	movwf	gpio_pin_direction_intialize@ret^0,c
  2418   001388                     
  2419                           ;MCAL_layer/GPIO/gpio.c: 33:     if(((void*)0) == Pin_Config || Pin_Config->pin > 8)
  2420   001388  502E               	movf	gpio_pin_direction_intialize@Pin_Config^0,w,c
  2421   00138A  102F               	iorwf	(gpio_pin_direction_intialize@Pin_Config+1)^0,w,c
  2422   00138C  B4D8               	btfsc	status,2,c
  2423   00138E  EFCB  F009         	goto	u1191
  2424   001392  EFCD  F009         	goto	u1190
  2425   001396                     u1191:
  2426   001396  EFDE  F009         	goto	l2062
  2427   00139A                     u1190:
  2428   00139A  C02E  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2429   00139E  C02F  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2430   0013A2  30DF               	rrcf	223,w,c
  2431   0013A4  32E8               	rrcf	wreg,f,c
  2432   0013A6  32E8               	rrcf	wreg,f,c
  2433   0013A8  0B07               	andlw	7
  2434   0013AA  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2435   0013AC  0E08               	movlw	8
  2436   0013AE  6430               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2437   0013B0  EFDC  F009         	goto	u1201
  2438   0013B4  EFDE  F009         	goto	u1200
  2439   0013B8                     u1201:
  2440   0013B8  EFE2  F009         	goto	l2064
  2441   0013BC                     u1200:
  2442   0013BC                     l2062:
  2443                           
  2444                           ;MCAL_layer/GPIO/gpio.c: 34:         ret = (Std_ReturnType)0x00;
  2445   0013BC  0E00               	movlw	0
  2446   0013BE  6E36               	movwf	gpio_pin_direction_intialize@ret^0,c
  2447   0013C0  EF52  F00A         	goto	l277
  2448   0013C4                     l2064:
  2449                           
  2450                           ;MCAL_layer/GPIO/gpio.c: 36:     {;MCAL_layer/GPIO/gpio.c: 37:         if(Pin_Config->di
      +                          rection == OUTPUT)
  2451   0013C4  C02E  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2452   0013C8  C02F  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2453   0013CC  BCDF               	btfsc	indf2,6,c
  2454   0013CE  EFEB  F009         	goto	u1211
  2455   0013D2  EFED  F009         	goto	u1210
  2456   0013D6                     u1211:
  2457   0013D6  EF1E  F00A         	goto	l2068
  2458   0013DA                     u1210:
  2459   0013DA                     
  2460                           ;MCAL_layer/GPIO/gpio.c: 38:             (*tris_reg[Pin_Config->port] &= ~((uint8)1 << P
      +                          in_Config->pin));
  2461   0013DA  C02E  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2462   0013DE  C02F  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2463   0013E2  30DF               	rrcf	223,w,c
  2464   0013E4  32E8               	rrcf	wreg,f,c
  2465   0013E6  32E8               	rrcf	wreg,f,c
  2466   0013E8  0B07               	andlw	7
  2467   0013EA  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2468   0013EC  0E01               	movlw	1
  2469   0013EE  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2470   0013F0  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2471   0013F2  EFFD  F009         	goto	u1224
  2472   0013F6                     u1225:
  2473   0013F6  90D8               	bcf	status,0,c
  2474   0013F8  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2475   0013FA                     u1224:
  2476   0013FA  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2477   0013FC  EFFB  F009         	goto	u1225
  2478   001400  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2479   001402  0AFF               	xorlw	255
  2480   001404  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2481   001406  C02E  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2482   00140A  C02F  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2483   00140E  50DF               	movf	223,w,c
  2484   001410  0B07               	andlw	7
  2485   001412  6E33               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  2486   001414  5033               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  2487   001416  0D02               	mullw	2
  2488   001418  0E15               	movlw	low _tris_reg
  2489   00141A  24F3               	addwf	243,w,c
  2490   00141C  6ED9               	movwf	fsr2l,c
  2491   00141E  0E00               	movlw	high _tris_reg
  2492   001420  20F4               	addwfc	prodh,w,c
  2493   001422  6EDA               	movwf	fsr2h,c
  2494   001424  CFDE F034          	movff	postinc2,??_gpio_pin_direction_intialize+4
  2495   001428  CFDD F035          	movff	postdec2,??_gpio_pin_direction_intialize+5
  2496   00142C  C034  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  2497   001430  C035  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  2498   001434  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2499   001436  16DF               	andwf	indf2,f,c
  2500   001438  EF52  F00A         	goto	l277
  2501   00143C                     l2068:
  2502   00143C  C02E  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2503   001440  C02F  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2504   001444  30DF               	rrcf	223,w,c
  2505   001446  32E8               	rrcf	wreg,f,c
  2506   001448  32E8               	rrcf	wreg,f,c
  2507   00144A  0B07               	andlw	7
  2508   00144C  6E30               	movwf	??_gpio_pin_direction_intialize^0,c
  2509   00144E  0E01               	movlw	1
  2510   001450  6E31               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2511   001452  2A30               	incf	??_gpio_pin_direction_intialize^0,f,c
  2512   001454  EF2E  F00A         	goto	u1234
  2513   001458                     u1235:
  2514   001458  90D8               	bcf	status,0,c
  2515   00145A  3631               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2516   00145C                     u1234:
  2517   00145C  2E30               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2518   00145E  EF2C  F00A         	goto	u1235
  2519   001462  C02E  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2520   001466  C02F  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2521   00146A  50DF               	movf	223,w,c
  2522   00146C  0B07               	andlw	7
  2523   00146E  6E32               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2524   001470  5032               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2525   001472  0D02               	mullw	2
  2526   001474  0E15               	movlw	low _tris_reg
  2527   001476  24F3               	addwf	243,w,c
  2528   001478  6ED9               	movwf	fsr2l,c
  2529   00147A  0E00               	movlw	high _tris_reg
  2530   00147C  20F4               	addwfc	prodh,w,c
  2531   00147E  6EDA               	movwf	fsr2h,c
  2532   001480  CFDE F033          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2533   001484  CFDD F034          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2534   001488  C033  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2535   00148C  C034  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2536   001490  5031               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2537   001492  12DF               	iorwf	indf2,f,c
  2538   001494  50DF               	movf	indf2,w,c
  2539   001496  B4D8               	btfsc	status,2,c
  2540   001498  EF50  F00A         	goto	u1241
  2541   00149C  EF52  F00A         	goto	u1240
  2542   0014A0                     u1241:
  2543   0014A0  EFDE  F009         	goto	l2062
  2544   0014A4                     u1240:
  2545   0014A4                     l277:
  2546                           
  2547                           ;MCAL_layer/GPIO/gpio.c: 43:         return ret;
  2548   0014A4  5036               	movf	gpio_pin_direction_intialize@ret^0,w,c
  2549   0014A6  0012               	return		;funcret
  2550   0014A8                     __end_of_gpio_pin_direction_intialize:
  2551                           	callstack 0
  2552                           
  2553 ;; *************** function ___awmod *****************
  2554 ;; Defined at:
  2555 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  dividend        2    0[COMRAM] int 
  2558 ;;  divisor         2    2[COMRAM] int 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  sign            1    5[COMRAM] unsigned char 
  2561 ;;  counter         1    4[COMRAM] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  2    0[COMRAM] int 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;Total ram usage:        6 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text14
  2585   001874                     __ptext14:
  2586                           	callstack 0
  2587   001874                     ___awmod:
  2588                           	callstack 30
  2589   001874  0E00               	movlw	0
  2590   001876  6E33               	movwf	___awmod@sign^0,c
  2591   001878  BE2F               	btfsc	(___awmod@dividend+1)^0,7,c
  2592   00187A  EF43  F00C         	goto	u1650
  2593   00187E  EF41  F00C         	goto	u1651
  2594   001882                     u1651:
  2595   001882  EF49  F00C         	goto	l2420
  2596   001886                     u1650:
  2597   001886  6C2E               	negf	___awmod@dividend^0,c
  2598   001888  1E2F               	comf	(___awmod@dividend+1)^0,f,c
  2599   00188A  B0D8               	btfsc	status,0,c
  2600   00188C  2A2F               	incf	(___awmod@dividend+1)^0,f,c
  2601   00188E  0E01               	movlw	1
  2602   001890  6E33               	movwf	___awmod@sign^0,c
  2603   001892                     l2420:
  2604   001892  BE31               	btfsc	(___awmod@divisor+1)^0,7,c
  2605   001894  EF50  F00C         	goto	u1660
  2606   001898  EF4E  F00C         	goto	u1661
  2607   00189C                     u1661:
  2608   00189C  EF54  F00C         	goto	l2424
  2609   0018A0                     u1660:
  2610   0018A0  6C30               	negf	___awmod@divisor^0,c
  2611   0018A2  1E31               	comf	(___awmod@divisor+1)^0,f,c
  2612   0018A4  B0D8               	btfsc	status,0,c
  2613   0018A6  2A31               	incf	(___awmod@divisor+1)^0,f,c
  2614   0018A8                     l2424:
  2615   0018A8  5030               	movf	___awmod@divisor^0,w,c
  2616   0018AA  1031               	iorwf	(___awmod@divisor+1)^0,w,c
  2617   0018AC  B4D8               	btfsc	status,2,c
  2618   0018AE  EF5B  F00C         	goto	u1671
  2619   0018B2  EF5D  F00C         	goto	u1670
  2620   0018B6                     u1671:
  2621   0018B6  EF81  F00C         	goto	l2440
  2622   0018BA                     u1670:
  2623   0018BA  0E01               	movlw	1
  2624   0018BC  6E32               	movwf	___awmod@counter^0,c
  2625   0018BE  EF65  F00C         	goto	l2430
  2626   0018C2                     l2428:
  2627   0018C2  90D8               	bcf	status,0,c
  2628   0018C4  3630               	rlcf	___awmod@divisor^0,f,c
  2629   0018C6  3631               	rlcf	(___awmod@divisor+1)^0,f,c
  2630   0018C8  2A32               	incf	___awmod@counter^0,f,c
  2631   0018CA                     l2430:
  2632   0018CA  AE31               	btfss	(___awmod@divisor+1)^0,7,c
  2633   0018CC  EF6A  F00C         	goto	u1681
  2634   0018D0  EF6C  F00C         	goto	u1680
  2635   0018D4                     u1681:
  2636   0018D4  EF61  F00C         	goto	l2428
  2637   0018D8                     u1680:
  2638   0018D8                     l2432:
  2639   0018D8  5030               	movf	___awmod@divisor^0,w,c
  2640   0018DA  5C2E               	subwf	___awmod@dividend^0,w,c
  2641   0018DC  5031               	movf	(___awmod@divisor+1)^0,w,c
  2642   0018DE  582F               	subwfb	(___awmod@dividend+1)^0,w,c
  2643   0018E0  A0D8               	btfss	status,0,c
  2644   0018E2  EF75  F00C         	goto	u1691
  2645   0018E6  EF77  F00C         	goto	u1690
  2646   0018EA                     u1691:
  2647   0018EA  EF7B  F00C         	goto	l2436
  2648   0018EE                     u1690:
  2649   0018EE  5030               	movf	___awmod@divisor^0,w,c
  2650   0018F0  5E2E               	subwf	___awmod@dividend^0,f,c
  2651   0018F2  5031               	movf	(___awmod@divisor+1)^0,w,c
  2652   0018F4  5A2F               	subwfb	(___awmod@dividend+1)^0,f,c
  2653   0018F6                     l2436:
  2654   0018F6  90D8               	bcf	status,0,c
  2655   0018F8  3231               	rrcf	(___awmod@divisor+1)^0,f,c
  2656   0018FA  3230               	rrcf	___awmod@divisor^0,f,c
  2657   0018FC  2E32               	decfsz	___awmod@counter^0,f,c
  2658   0018FE  EF6C  F00C         	goto	l2432
  2659   001902                     l2440:
  2660   001902  5033               	movf	___awmod@sign^0,w,c
  2661   001904  B4D8               	btfsc	status,2,c
  2662   001906  EF87  F00C         	goto	u1701
  2663   00190A  EF89  F00C         	goto	u1700
  2664   00190E                     u1701:
  2665   00190E  EF8D  F00C         	goto	l2444
  2666   001912                     u1700:
  2667   001912  6C2E               	negf	___awmod@dividend^0,c
  2668   001914  1E2F               	comf	(___awmod@dividend+1)^0,f,c
  2669   001916  B0D8               	btfsc	status,0,c
  2670   001918  2A2F               	incf	(___awmod@dividend+1)^0,f,c
  2671   00191A                     l2444:
  2672   00191A  C02E  F02E         	movff	___awmod@dividend,?___awmod
  2673   00191E  C02F  F02F         	movff	___awmod@dividend+1,?___awmod+1
  2674   001922  0012               	return		;funcret
  2675   001924                     __end_of___awmod:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function ___awdiv *****************
  2679 ;; Defined at:
  2680 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  dividend        2    0[COMRAM] int 
  2683 ;;  divisor         2    2[COMRAM] int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  quotient        2    6[COMRAM] int 
  2686 ;;  sign            1    5[COMRAM] unsigned char 
  2687 ;;  counter         1    4[COMRAM] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  2    0[COMRAM] int 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;Total ram usage:        8 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text15
  2711   0017B0                     __ptext15:
  2712                           	callstack 0
  2713   0017B0                     ___awdiv:
  2714                           	callstack 30
  2715   0017B0  0E00               	movlw	0
  2716   0017B2  6E33               	movwf	___awdiv@sign^0,c
  2717   0017B4  BE31               	btfsc	(___awdiv@divisor+1)^0,7,c
  2718   0017B6  EFE1  F00B         	goto	u1590
  2719   0017BA  EFDF  F00B         	goto	u1591
  2720   0017BE                     u1591:
  2721   0017BE  EFE7  F00B         	goto	l2376
  2722   0017C2                     u1590:
  2723   0017C2  6C30               	negf	___awdiv@divisor^0,c
  2724   0017C4  1E31               	comf	(___awdiv@divisor+1)^0,f,c
  2725   0017C6  B0D8               	btfsc	status,0,c
  2726   0017C8  2A31               	incf	(___awdiv@divisor+1)^0,f,c
  2727   0017CA  0E01               	movlw	1
  2728   0017CC  6E33               	movwf	___awdiv@sign^0,c
  2729   0017CE                     l2376:
  2730   0017CE  BE2F               	btfsc	(___awdiv@dividend+1)^0,7,c
  2731   0017D0  EFEE  F00B         	goto	u1600
  2732   0017D4  EFEC  F00B         	goto	u1601
  2733   0017D8                     u1601:
  2734   0017D8  EFF4  F00B         	goto	l2382
  2735   0017DC                     u1600:
  2736   0017DC  6C2E               	negf	___awdiv@dividend^0,c
  2737   0017DE  1E2F               	comf	(___awdiv@dividend+1)^0,f,c
  2738   0017E0  B0D8               	btfsc	status,0,c
  2739   0017E2  2A2F               	incf	(___awdiv@dividend+1)^0,f,c
  2740   0017E4  0E01               	movlw	1
  2741   0017E6  1A33               	xorwf	___awdiv@sign^0,f,c
  2742   0017E8                     l2382:
  2743   0017E8  0E00               	movlw	0
  2744   0017EA  6E35               	movwf	(___awdiv@quotient+1)^0,c
  2745   0017EC  0E00               	movlw	0
  2746   0017EE  6E34               	movwf	___awdiv@quotient^0,c
  2747   0017F0  5030               	movf	___awdiv@divisor^0,w,c
  2748   0017F2  1031               	iorwf	(___awdiv@divisor+1)^0,w,c
  2749   0017F4  B4D8               	btfsc	status,2,c
  2750   0017F6  EFFF  F00B         	goto	u1611
  2751   0017FA  EF01  F00C         	goto	u1610
  2752   0017FE                     u1611:
  2753   0017FE  EF29  F00C         	goto	l2404
  2754   001802                     u1610:
  2755   001802  0E01               	movlw	1
  2756   001804  6E32               	movwf	___awdiv@counter^0,c
  2757   001806  EF09  F00C         	goto	l2390
  2758   00180A                     l2388:
  2759   00180A  90D8               	bcf	status,0,c
  2760   00180C  3630               	rlcf	___awdiv@divisor^0,f,c
  2761   00180E  3631               	rlcf	(___awdiv@divisor+1)^0,f,c
  2762   001810  2A32               	incf	___awdiv@counter^0,f,c
  2763   001812                     l2390:
  2764   001812  AE31               	btfss	(___awdiv@divisor+1)^0,7,c
  2765   001814  EF0E  F00C         	goto	u1621
  2766   001818  EF10  F00C         	goto	u1620
  2767   00181C                     u1621:
  2768   00181C  EF05  F00C         	goto	l2388
  2769   001820                     u1620:
  2770   001820                     l2392:
  2771   001820  90D8               	bcf	status,0,c
  2772   001822  3634               	rlcf	___awdiv@quotient^0,f,c
  2773   001824  3635               	rlcf	(___awdiv@quotient+1)^0,f,c
  2774   001826  5030               	movf	___awdiv@divisor^0,w,c
  2775   001828  5C2E               	subwf	___awdiv@dividend^0,w,c
  2776   00182A  5031               	movf	(___awdiv@divisor+1)^0,w,c
  2777   00182C  582F               	subwfb	(___awdiv@dividend+1)^0,w,c
  2778   00182E  A0D8               	btfss	status,0,c
  2779   001830  EF1C  F00C         	goto	u1631
  2780   001834  EF1E  F00C         	goto	u1630
  2781   001838                     u1631:
  2782   001838  EF23  F00C         	goto	l2400
  2783   00183C                     u1630:
  2784   00183C  5030               	movf	___awdiv@divisor^0,w,c
  2785   00183E  5E2E               	subwf	___awdiv@dividend^0,f,c
  2786   001840  5031               	movf	(___awdiv@divisor+1)^0,w,c
  2787   001842  5A2F               	subwfb	(___awdiv@dividend+1)^0,f,c
  2788   001844  8034               	bsf	___awdiv@quotient^0,0,c
  2789   001846                     l2400:
  2790   001846  90D8               	bcf	status,0,c
  2791   001848  3231               	rrcf	(___awdiv@divisor+1)^0,f,c
  2792   00184A  3230               	rrcf	___awdiv@divisor^0,f,c
  2793   00184C  2E32               	decfsz	___awdiv@counter^0,f,c
  2794   00184E  EF10  F00C         	goto	l2392
  2795   001852                     l2404:
  2796   001852  5033               	movf	___awdiv@sign^0,w,c
  2797   001854  B4D8               	btfsc	status,2,c
  2798   001856  EF2F  F00C         	goto	u1641
  2799   00185A  EF31  F00C         	goto	u1640
  2800   00185E                     u1641:
  2801   00185E  EF35  F00C         	goto	l2408
  2802   001862                     u1640:
  2803   001862  6C34               	negf	___awdiv@quotient^0,c
  2804   001864  1E35               	comf	(___awdiv@quotient+1)^0,f,c
  2805   001866  B0D8               	btfsc	status,0,c
  2806   001868  2A35               	incf	(___awdiv@quotient+1)^0,f,c
  2807   00186A                     l2408:
  2808   00186A  C034  F02E         	movff	___awdiv@quotient,?___awdiv
  2809   00186E  C035  F02F         	movff	___awdiv@quotient+1,?___awdiv+1
  2810   001872  0012               	return		;funcret
  2811   001874                     __end_of___awdiv:
  2812                           	callstack 0
  2813                           
  2814 ;; *************** function _Led_Turn_On *****************
  2815 ;; Defined at:
  2816 ;;		line 27 in file "ECU_layer/LED/ecu_led.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  led             2   10[COMRAM] PTR const struct .
  2819 ;;		 -> led_yellow(1), led_red(1), led_green(1), 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  led_pin         1   13[COMRAM] struct .
  2822 ;;  ret             1    0        unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      unsigned char 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        4 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 1
  2839 ;; This function calls:
  2840 ;;		_gpio_pin_write_logic
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text16
  2847   001A22                     __ptext16:
  2848                           	callstack 0
  2849   001A22                     _Led_Turn_On:
  2850                           	callstack 29
  2851   001A22                     
  2852                           ;ECU_layer/LED/ecu_led.c: 29:     if(((void*)0) == led )
  2853   001A22  5038               	movf	Led_Turn_On@led^0,w,c
  2854   001A24  1039               	iorwf	(Led_Turn_On@led+1)^0,w,c
  2855   001A26  A4D8               	btfss	status,2,c
  2856   001A28  EF18  F00D         	goto	u1551
  2857   001A2C  EF1A  F00D         	goto	u1550
  2858   001A30                     u1551:
  2859   001A30  EF1C  F00D         	goto	l217
  2860   001A34                     u1550:
  2861   001A34  EF4B  F00D         	goto	l221
  2862   001A38                     l217:
  2863                           
  2864                           ;ECU_layer/LED/ecu_led.c: 32:     {;ECU_layer/LED/ecu_led.c: 33:      Pin_Config_t led_p
      +                          in = {led->port, led->pin, OUTPUT, led->led_st};
  2865   001A38  C06B  F03B         	movff	Led_Turn_On@F3053,Led_Turn_On@led_pin
  2866   001A3C  C038  FFD9         	movff	Led_Turn_On@led,fsr2l
  2867   001A40  C039  FFDA         	movff	Led_Turn_On@led+1,fsr2h
  2868   001A44  50DF               	movf	223,w,c
  2869   001A46  0B0F               	andlw	15
  2870   001A48  6E3A               	movwf	??_Led_Turn_On^0,c
  2871   001A4A  503B               	movf	Led_Turn_On@led_pin^0,w,c
  2872   001A4C  183A               	xorwf	??_Led_Turn_On^0,w,c
  2873   001A4E  0BF8               	andlw	-8
  2874   001A50  183A               	xorwf	??_Led_Turn_On^0,w,c
  2875   001A52  6E3B               	movwf	Led_Turn_On@led_pin^0,c
  2876   001A54  C038  FFD9         	movff	Led_Turn_On@led,fsr2l
  2877   001A58  C039  FFDA         	movff	Led_Turn_On@led+1,fsr2h
  2878   001A5C  38DF               	swapf	223,w,c
  2879   001A5E  0B07               	andlw	7
  2880   001A60  6E3A               	movwf	??_Led_Turn_On^0,c
  2881   001A62  463A               	rlncf	??_Led_Turn_On^0,f,c
  2882   001A64  463A               	rlncf	??_Led_Turn_On^0,f,c
  2883   001A66  463A               	rlncf	??_Led_Turn_On^0,f,c
  2884   001A68  503B               	movf	Led_Turn_On@led_pin^0,w,c
  2885   001A6A  183A               	xorwf	??_Led_Turn_On^0,w,c
  2886   001A6C  0BC7               	andlw	-57
  2887   001A6E  183A               	xorwf	??_Led_Turn_On^0,w,c
  2888   001A70  6E3B               	movwf	Led_Turn_On@led_pin^0,c
  2889   001A72  9C3B               	bcf	Led_Turn_On@led_pin^0,6,c
  2890   001A74  C038  FFD9         	movff	Led_Turn_On@led,fsr2l
  2891   001A78  C039  FFDA         	movff	Led_Turn_On@led+1,fsr2h
  2892   001A7C  AEDF               	btfss	indf2,7,c
  2893   001A7E  D002               	bra	u1565
  2894   001A80  8E3B               	bsf	Led_Turn_On@led_pin^0,7,c
  2895   001A82  D001               	bra	u1567
  2896   001A84                     u1565:
  2897   001A84  9E3B               	bcf	Led_Turn_On@led_pin^0,7,c
  2898   001A86                     u1567:
  2899   001A86                     
  2900                           ;ECU_layer/LED/ecu_led.c: 34:      gpio_pin_write_logic(&led_pin, HIGH);
  2901   001A86  0E3B               	movlw	low Led_Turn_On@led_pin
  2902   001A88  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  2903   001A8A  0E00               	movlw	high Led_Turn_On@led_pin
  2904   001A8C  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  2905   001A8E  0E01               	movlw	1
  2906   001A90  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2907   001A92  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  2908   001A96                     l221:
  2909   001A96  0012               	return		;funcret
  2910   001A98                     __end_of_Led_Turn_On:
  2911                           	callstack 0
  2912                           
  2913 ;; *************** function _Led_Turn_Off *****************
  2914 ;; Defined at:
  2915 ;;		line 38 in file "ECU_layer/LED/ecu_led.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  led             2   10[COMRAM] PTR const struct .
  2918 ;;		 -> led_yellow(1), led_red(1), led_green(1), 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  led_pin         1   13[COMRAM] struct .
  2921 ;;  ret             1    0        unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      unsigned char 
  2924 ;; Registers used:
  2925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;Total ram usage:        4 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 1
  2938 ;; This function calls:
  2939 ;;		_gpio_pin_write_logic
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text17
  2946   001A98                     __ptext17:
  2947                           	callstack 0
  2948   001A98                     _Led_Turn_Off:
  2949                           	callstack 29
  2950   001A98                     
  2951                           ;ECU_layer/LED/ecu_led.c: 40:     if(((void*)0) == led )
  2952   001A98  5038               	movf	Led_Turn_Off@led^0,w,c
  2953   001A9A  1039               	iorwf	(Led_Turn_Off@led+1)^0,w,c
  2954   001A9C  A4D8               	btfss	status,2,c
  2955   001A9E  EF53  F00D         	goto	u1571
  2956   001AA2  EF55  F00D         	goto	u1570
  2957   001AA6                     u1571:
  2958   001AA6  EF57  F00D         	goto	l224
  2959   001AAA                     u1570:
  2960   001AAA  EF86  F00D         	goto	l228
  2961   001AAE                     l224:
  2962                           
  2963                           ;ECU_layer/LED/ecu_led.c: 43:     {;ECU_layer/LED/ecu_led.c: 44:      Pin_Config_t led_p
      +                          in = {led->port, led->pin, OUTPUT, led->led_st};
  2964   001AAE  C06A  F03B         	movff	Led_Turn_Off@F3058,Led_Turn_Off@led_pin
  2965   001AB2  C038  FFD9         	movff	Led_Turn_Off@led,fsr2l
  2966   001AB6  C039  FFDA         	movff	Led_Turn_Off@led+1,fsr2h
  2967   001ABA  50DF               	movf	223,w,c
  2968   001ABC  0B0F               	andlw	15
  2969   001ABE  6E3A               	movwf	??_Led_Turn_Off^0,c
  2970   001AC0  503B               	movf	Led_Turn_Off@led_pin^0,w,c
  2971   001AC2  183A               	xorwf	??_Led_Turn_Off^0,w,c
  2972   001AC4  0BF8               	andlw	-8
  2973   001AC6  183A               	xorwf	??_Led_Turn_Off^0,w,c
  2974   001AC8  6E3B               	movwf	Led_Turn_Off@led_pin^0,c
  2975   001ACA  C038  FFD9         	movff	Led_Turn_Off@led,fsr2l
  2976   001ACE  C039  FFDA         	movff	Led_Turn_Off@led+1,fsr2h
  2977   001AD2  38DF               	swapf	223,w,c
  2978   001AD4  0B07               	andlw	7
  2979   001AD6  6E3A               	movwf	??_Led_Turn_Off^0,c
  2980   001AD8  463A               	rlncf	??_Led_Turn_Off^0,f,c
  2981   001ADA  463A               	rlncf	??_Led_Turn_Off^0,f,c
  2982   001ADC  463A               	rlncf	??_Led_Turn_Off^0,f,c
  2983   001ADE  503B               	movf	Led_Turn_Off@led_pin^0,w,c
  2984   001AE0  183A               	xorwf	??_Led_Turn_Off^0,w,c
  2985   001AE2  0BC7               	andlw	-57
  2986   001AE4  183A               	xorwf	??_Led_Turn_Off^0,w,c
  2987   001AE6  6E3B               	movwf	Led_Turn_Off@led_pin^0,c
  2988   001AE8  9C3B               	bcf	Led_Turn_Off@led_pin^0,6,c
  2989   001AEA  C038  FFD9         	movff	Led_Turn_Off@led,fsr2l
  2990   001AEE  C039  FFDA         	movff	Led_Turn_Off@led+1,fsr2h
  2991   001AF2  AEDF               	btfss	indf2,7,c
  2992   001AF4  D002               	bra	u1585
  2993   001AF6  8E3B               	bsf	Led_Turn_Off@led_pin^0,7,c
  2994   001AF8  D001               	bra	u1587
  2995   001AFA                     u1585:
  2996   001AFA  9E3B               	bcf	Led_Turn_Off@led_pin^0,7,c
  2997   001AFC                     u1587:
  2998   001AFC                     
  2999                           ;ECU_layer/LED/ecu_led.c: 45:      gpio_pin_write_logic(&led_pin, LOW);
  3000   001AFC  0E3B               	movlw	low Led_Turn_Off@led_pin
  3001   001AFE  6E2E               	movwf	gpio_pin_write_logic@Pin_Config^0,c
  3002   001B00  0E00               	movlw	high Led_Turn_Off@led_pin
  3003   001B02  6E2F               	movwf	(gpio_pin_write_logic@Pin_Config+1)^0,c
  3004   001B04  0E00               	movlw	0
  3005   001B06  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  3006   001B08  ECE4  F00A         	call	_gpio_pin_write_logic	;wreg free
  3007   001B0C                     l228:
  3008   001B0C  0012               	return		;funcret
  3009   001B0E                     __end_of_Led_Turn_Off:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _gpio_pin_write_logic *****************
  3013 ;; Defined at:
  3014 ;;		line 75 in file "MCAL_layer/GPIO/gpio.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  Pin_Config      2    0[COMRAM] PTR const struct .
  3017 ;;		 -> segment_enable_1(1), segment_enable_2(1), lcd_4bit.lcd_pin(4), lcd_4bit(6), 
  3018 ;;		 -> segment_1.segment_pin(4), segment_1(5), Led_Turn_Off@led_pin(1), Led_Turn_On@led_pin(1), 
  3019 ;;		 -> Led_initialize@led_pin(1), 
  3020 ;;  logic           1    2[COMRAM] enum E2968
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  ret             1    9[COMRAM] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      unsigned char 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3032 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;Total ram usage:       10 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_segment_write_number
  3042 ;;		_send_4_bit_command
  3043 ;;		_send_4_bit_char_data
  3044 ;;		_send_4_bit_enable
  3045 ;;		_send_4_bit_help
  3046 ;;		_Led_Turn_On
  3047 ;;		_Led_Turn_Off
  3048 ;;		_gpio_pin_intialize
  3049 ;;		_main
  3050 ;;		_send_8_bit_command
  3051 ;;		_send_8_bit_char_data
  3052 ;;		_send_8_bit_enable
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text18
  3057   0015C8                     __ptext18:
  3058                           	callstack 0
  3059   0015C8                     _gpio_pin_write_logic:
  3060                           	callstack 27
  3061   0015C8                     
  3062                           ;MCAL_layer/GPIO/gpio.c: 76:      Std_ReturnType ret = (Std_ReturnType)0x01;
  3063   0015C8  0E01               	movlw	1
  3064   0015CA  6E37               	movwf	gpio_pin_write_logic@ret^0,c
  3065   0015CC                     
  3066                           ;MCAL_layer/GPIO/gpio.c: 77:     if(((void*)0) == Pin_Config || Pin_Config->pin > 8)
  3067   0015CC  502E               	movf	gpio_pin_write_logic@Pin_Config^0,w,c
  3068   0015CE  102F               	iorwf	(gpio_pin_write_logic@Pin_Config+1)^0,w,c
  3069   0015D0  B4D8               	btfsc	status,2,c
  3070   0015D2  EFED  F00A         	goto	u1101
  3071   0015D6  EFEF  F00A         	goto	u1100
  3072   0015DA                     u1101:
  3073   0015DA  EF00  F00B         	goto	l2002
  3074   0015DE                     u1100:
  3075   0015DE  C02E  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  3076   0015E2  C02F  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  3077   0015E6  30DF               	rrcf	223,w,c
  3078   0015E8  32E8               	rrcf	wreg,f,c
  3079   0015EA  32E8               	rrcf	wreg,f,c
  3080   0015EC  0B07               	andlw	7
  3081   0015EE  6E31               	movwf	??_gpio_pin_write_logic^0,c
  3082   0015F0  0E08               	movlw	8
  3083   0015F2  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  3084   0015F4  EFFE  F00A         	goto	u1111
  3085   0015F8  EF00  F00B         	goto	u1110
  3086   0015FC                     u1111:
  3087   0015FC  EF04  F00B         	goto	l2004
  3088   001600                     u1110:
  3089   001600                     l2002:
  3090                           
  3091                           ;MCAL_layer/GPIO/gpio.c: 78:         ret = (Std_ReturnType)0x00;
  3092   001600  0E00               	movlw	0
  3093   001602  6E37               	movwf	gpio_pin_write_logic@ret^0,c
  3094   001604  EF71  F00B         	goto	l295
  3095   001608                     l2004:
  3096                           
  3097                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         if(logic == HIGH)
  3098   001608  0430               	decf	gpio_pin_write_logic@logic^0,w,c
  3099   00160A  A4D8               	btfss	status,2,c
  3100   00160C  EF0A  F00B         	goto	u1121
  3101   001610  EF0C  F00B         	goto	u1120
  3102   001614                     u1121:
  3103   001614  EF3A  F00B         	goto	l2008
  3104   001618                     u1120:
  3105   001618                     
  3106                           ;MCAL_layer/GPIO/gpio.c: 82:             (*lat_reg[Pin_Config->port] |= ((uint8)1 << Pin
      +                          _Config->pin));
  3107   001618  C02E  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  3108   00161C  C02F  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  3109   001620  30DF               	rrcf	223,w,c
  3110   001622  32E8               	rrcf	wreg,f,c
  3111   001624  32E8               	rrcf	wreg,f,c
  3112   001626  0B07               	andlw	7
  3113   001628  6E31               	movwf	??_gpio_pin_write_logic^0,c
  3114   00162A  0E01               	movlw	1
  3115   00162C  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3116   00162E  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  3117   001630  EF1C  F00B         	goto	u1134
  3118   001634                     u1135:
  3119   001634  90D8               	bcf	status,0,c
  3120   001636  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3121   001638                     u1134:
  3122   001638  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  3123   00163A  EF1A  F00B         	goto	u1135
  3124   00163E  C02E  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  3125   001642  C02F  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  3126   001646  50DF               	movf	223,w,c
  3127   001648  0B07               	andlw	7
  3128   00164A  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3129   00164C  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3130   00164E  0D02               	mullw	2
  3131   001650  0E0B               	movlw	low _lat_reg
  3132   001652  24F3               	addwf	243,w,c
  3133   001654  6ED9               	movwf	fsr2l,c
  3134   001656  0E00               	movlw	high _lat_reg
  3135   001658  20F4               	addwfc	prodh,w,c
  3136   00165A  6EDA               	movwf	fsr2h,c
  3137   00165C  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  3138   001660  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  3139   001664  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3140   001668  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3141   00166C  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3142   00166E  12DF               	iorwf	indf2,f,c
  3143   001670  EF71  F00B         	goto	l295
  3144   001674                     l2008:
  3145   001674  C02E  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  3146   001678  C02F  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  3147   00167C  30DF               	rrcf	223,w,c
  3148   00167E  32E8               	rrcf	wreg,f,c
  3149   001680  32E8               	rrcf	wreg,f,c
  3150   001682  0B07               	andlw	7
  3151   001684  6E31               	movwf	??_gpio_pin_write_logic^0,c
  3152   001686  0E01               	movlw	1
  3153   001688  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3154   00168A  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  3155   00168C  EF4A  F00B         	goto	u1144
  3156   001690                     u1145:
  3157   001690  90D8               	bcf	status,0,c
  3158   001692  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3159   001694                     u1144:
  3160   001694  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  3161   001696  EF48  F00B         	goto	u1145
  3162   00169A  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3163   00169C  0AFF               	xorlw	255
  3164   00169E  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3165   0016A0  C02E  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  3166   0016A4  C02F  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  3167   0016A8  50DF               	movf	223,w,c
  3168   0016AA  0B07               	andlw	7
  3169   0016AC  6E34               	movwf	(??_gpio_pin_write_logic+3)^0,c
  3170   0016AE  5034               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  3171   0016B0  0D02               	mullw	2
  3172   0016B2  0E0B               	movlw	low _lat_reg
  3173   0016B4  24F3               	addwf	243,w,c
  3174   0016B6  6ED9               	movwf	fsr2l,c
  3175   0016B8  0E00               	movlw	high _lat_reg
  3176   0016BA  20F4               	addwfc	prodh,w,c
  3177   0016BC  6EDA               	movwf	fsr2h,c
  3178   0016BE  CFDE F035          	movff	postinc2,??_gpio_pin_write_logic+4
  3179   0016C2  CFDD F036          	movff	postdec2,??_gpio_pin_write_logic+5
  3180   0016C6  C035  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  3181   0016CA  C036  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  3182   0016CE  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3183   0016D0  16DF               	andwf	indf2,f,c
  3184   0016D2  50DF               	movf	indf2,w,c
  3185   0016D4  B4D8               	btfsc	status,2,c
  3186   0016D6  EF6F  F00B         	goto	u1151
  3187   0016DA  EF71  F00B         	goto	u1150
  3188   0016DE                     u1151:
  3189   0016DE  EF00  F00B         	goto	l2002
  3190   0016E2                     u1150:
  3191   0016E2                     l295:
  3192                           
  3193                           ;MCAL_layer/GPIO/gpio.c: 87:         return ret;
  3194   0016E2  5037               	movf	gpio_pin_write_logic@ret^0,w,c
  3195   0016E4  0012               	return		;funcret
  3196   0016E6                     __end_of_gpio_pin_write_logic:
  3197                           	callstack 0
  3198                           
  3199                           	psect	rparam
  3200   000000                     
  3201                           	psect	config
  3202                           
  3203                           ; Padding undefined space
  3204   300000                     	org	3145728
  3205   300000  FF                 	db	255
  3206                           
  3207                           ;Config register CONFIG1H @ 0x300001
  3208                           ;	Oscillator Selection bits
  3209                           ;	OSC = HS, HS oscillator
  3210                           ;	Fail-Safe Clock Monitor Enable bit
  3211                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3212                           ;	Internal/External Oscillator Switchover bit
  3213                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3214   300001                     	org	3145729
  3215   300001  02                 	db	2
  3216                           
  3217                           ;Config register CONFIG2L @ 0x300002
  3218                           ;	Power-up Timer Enable bit
  3219                           ;	PWRT = OFF, PWRT disabled
  3220                           ;	Brown-out Reset Enable bits
  3221                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3222                           ;	Brown Out Reset Voltage bits
  3223                           ;	BORV = 1, 
  3224   300002                     	org	3145730
  3225   300002  09                 	db	9
  3226                           
  3227                           ;Config register CONFIG2H @ 0x300003
  3228                           ;	Watchdog Timer Enable bit
  3229                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3230                           ;	Watchdog Timer Postscale Select bits
  3231                           ;	WDTPS = 32768, 1:32768
  3232   300003                     	org	3145731
  3233   300003  1E                 	db	30
  3234                           
  3235                           ; Padding undefined space
  3236   300004                     	org	3145732
  3237   300004  FF                 	db	255
  3238                           
  3239                           ;Config register CONFIG3H @ 0x300005
  3240                           ;	CCP2 MUX bit
  3241                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3242                           ;	PORTB A/D Enable bit
  3243                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3244                           ;	Low-Power Timer1 Oscillator Enable bit
  3245                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3246                           ;	MCLR Pin Enable bit
  3247                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3248   300005                     	org	3145733
  3249   300005  81                 	db	129
  3250                           
  3251                           ;Config register CONFIG4L @ 0x300006
  3252                           ;	Stack Full/Underflow Reset Enable bit
  3253                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3254                           ;	Single-Supply ICSP Enable bit
  3255                           ;	LVP = OFF, Single-Supply ICSP disabled
  3256                           ;	Extended Instruction Set Enable bit
  3257                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3258                           ;	Background Debugger Enable bit
  3259                           ;	DEBUG = 0x1, unprogrammed default
  3260   300006                     	org	3145734
  3261   300006  81                 	db	129
  3262                           
  3263                           ; Padding undefined space
  3264   300007                     	org	3145735
  3265   300007  FF                 	db	255
  3266                           
  3267                           ;Config register CONFIG5L @ 0x300008
  3268                           ;	Code Protection bit
  3269                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3270                           ;	Code Protection bit
  3271                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3272                           ;	Code Protection bit
  3273                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3274                           ;	Code Protection bit
  3275                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3276   300008                     	org	3145736
  3277   300008  0F                 	db	15
  3278                           
  3279                           ;Config register CONFIG5H @ 0x300009
  3280                           ;	Boot Block Code Protection bit
  3281                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3282                           ;	Data EEPROM Code Protection bit
  3283                           ;	CPD = OFF, Data EEPROM not code-protected
  3284   300009                     	org	3145737
  3285   300009  C0                 	db	192
  3286                           
  3287                           ;Config register CONFIG6L @ 0x30000A
  3288                           ;	Write Protection bit
  3289                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3290                           ;	Write Protection bit
  3291                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3292                           ;	Write Protection bit
  3293                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3294                           ;	Write Protection bit
  3295                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3296   30000A                     	org	3145738
  3297   30000A  0F                 	db	15
  3298                           
  3299                           ;Config register CONFIG6H @ 0x30000B
  3300                           ;	Configuration Register Write Protection bit
  3301                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3302                           ;	Boot Block Write Protection bit
  3303                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3304                           ;	Data EEPROM Write Protection bit
  3305                           ;	WRTD = OFF, Data EEPROM not write-protected
  3306   30000B                     	org	3145739
  3307   30000B  E0                 	db	224
  3308                           
  3309                           ;Config register CONFIG7L @ 0x30000C
  3310                           ;	Table Read Protection bit
  3311                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3312                           ;	Table Read Protection bit
  3313                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3314                           ;	Table Read Protection bit
  3315                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3316                           ;	Table Read Protection bit
  3317                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3318   30000C                     	org	3145740
  3319   30000C  0F                 	db	15
  3320                           
  3321                           ;Config register CONFIG7H @ 0x30000D
  3322                           ;	Boot Block Table Read Protection bit
  3323                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3324   30000D                     	org	3145741
  3325   30000D  40                 	db	64
  3326                           tosu	equ	0xFFF
  3327                           tosh	equ	0xFFE
  3328                           tosl	equ	0xFFD
  3329                           stkptr	equ	0xFFC
  3330                           pclatu	equ	0xFFB
  3331                           pclath	equ	0xFFA
  3332                           pcl	equ	0xFF9
  3333                           tblptru	equ	0xFF8
  3334                           tblptrh	equ	0xFF7
  3335                           tblptrl	equ	0xFF6
  3336                           tablat	equ	0xFF5
  3337                           prodh	equ	0xFF4
  3338                           prodl	equ	0xFF3
  3339                           indf0	equ	0xFEF
  3340                           postinc0	equ	0xFEE
  3341                           postdec0	equ	0xFED
  3342                           preinc0	equ	0xFEC
  3343                           plusw0	equ	0xFEB
  3344                           fsr0h	equ	0xFEA
  3345                           fsr0l	equ	0xFE9
  3346                           wreg	equ	0xFE8
  3347                           indf1	equ	0xFE7
  3348                           postinc1	equ	0xFE6
  3349                           postdec1	equ	0xFE5
  3350                           preinc1	equ	0xFE4
  3351                           plusw1	equ	0xFE3
  3352                           fsr1h	equ	0xFE2
  3353                           fsr1l	equ	0xFE1
  3354                           bsr	equ	0xFE0
  3355                           indf2	equ	0xFDF
  3356                           postinc2	equ	0xFDE
  3357                           postdec2	equ	0xFDD
  3358                           preinc2	equ	0xFDC
  3359                           plusw2	equ	0xFDB
  3360                           fsr2h	equ	0xFDA
  3361                           fsr2l	equ	0xFD9
  3362                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        45
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     36     109
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S1111$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1111$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    gpio_pin_intialize@Pin_Config	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit.lcd_pin(COMRAM[4]), lcd_4bit(COMRAM[6]), segment_1.segment_pin(COMRAM[4]), segment_1(COMRAM[5]), 
		 -> Led_initialize@led_pin(COMRAM[1]), 

    gpio_pin_write_logic@Pin_Config	PTR const struct . size(2) Largest target is 6
		 -> segment_enable_1(COMRAM[1]), segment_enable_2(COMRAM[1]), lcd_4bit.lcd_pin(COMRAM[4]), lcd_4bit(COMRAM[6]), 
		 -> segment_1.segment_pin(COMRAM[4]), segment_1(COMRAM[5]), Led_Turn_Off@led_pin(COMRAM[1]), Led_Turn_On@led_pin(COMRAM[1]), 
		 -> Led_initialize@led_pin(COMRAM[1]), 

    gpio_pin_direction_intialize@Pin_Config	PTR const struct . size(2) Largest target is 6
		 -> segment_enable_1(COMRAM[1]), segment_enable_2(COMRAM[1]), lcd_4bit.lcd_pin(COMRAM[4]), lcd_4bit(COMRAM[6]), 
		 -> segment_1.segment_pin(COMRAM[4]), segment_1(COMRAM[5]), Led_initialize@led_pin(COMRAM[1]), 

    port_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    Led_Turn_Off@led	PTR const struct . size(2) Largest target is 1
		 -> led_yellow(COMRAM[1]), led_red(COMRAM[1]), led_green(COMRAM[1]), 

    Led_Turn_On@led	PTR const struct . size(2) Largest target is 1
		 -> led_yellow(COMRAM[1]), led_red(COMRAM[1]), led_green(COMRAM[1]), 

    Led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led_yellow(COMRAM[1]), led_red(COMRAM[1]), led_green(COMRAM[1]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4_bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    send_4_bit_help@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    send_4_bit_string_data_pos@data	PTR unsigned char  size(2) Largest target is 8
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[5]), 

    send_4_bit_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    send_4_bit_enable@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    send_4_bit_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    send_4_bit_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    lcd_pins_4_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(COMRAM[6]), 

    segment_write_number@segment	PTR const struct . size(2) Largest target is 5
		 -> segment_1(COMRAM[5]), 

    segment_pin_initialize@segment	PTR const struct . size(2) Largest target is 5
		 -> segment_1(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_send_4_bit_string_data_pos
    _send_4_bit_string_data_pos->_lcd_4_bit_set_cursor
    _send_4_bit_char_data->_send_4_bit_help
    _lcd_4_bit_set_cursor->_send_4_bit_command
    _segment_write_number->_gpio_pin_write_logic
    _application_initialize->_lcd_pins_4_initialize
    _segment_pin_initialize->_gpio_pin_intialize
    _lcd_pins_4_initialize->_send_4_bit_command
    _send_4_bit_command->_send_4_bit_help
    _send_4_bit_help->_gpio_pin_write_logic
    _send_4_bit_enable->_gpio_pin_write_logic
    _Led_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _Led_Turn_On->_gpio_pin_write_logic
    _Led_Turn_Off->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  103369
                                             29 COMRAM     7     7      0
                       _Led_Turn_Off
                        _Led_Turn_On
                            ___awdiv
                            ___awmod
             _application_initialize
               _gpio_pin_write_logic
               _segment_write_number
         _send_4_bit_string_data_pos
 ---------------------------------------------------------------------------------
 (1) _send_4_bit_string_data_pos                           7     1      6   38624
                                             23 COMRAM     6     0      6
               _lcd_4_bit_set_cursor
               _send_4_bit_char_data
 ---------------------------------------------------------------------------------
 (2) _send_4_bit_char_data                                 4     1      3   17628
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
                  _send_4_bit_enable
                    _send_4_bit_help
 ---------------------------------------------------------------------------------
 (2) _lcd_4_bit_set_cursor                                 5     1      4   19919
                                             18 COMRAM     5     1      4
                 _send_4_bit_command
 ---------------------------------------------------------------------------------
 (1) _segment_write_number                                 4     1      3    6313
                                             10 COMRAM     3     0      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   40284
                     _Led_initialize
       _gpio_pin_direction_intialize
              _lcd_pins_4_initialize
             _segment_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _segment_pin_initialize                               3     1      2    6768
                                             14 COMRAM     2     0      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _lcd_pins_4_initialize                                6     4      2   26171
                                             18 COMRAM     6     4      2
                 _gpio_pin_intialize
                 _send_4_bit_command
 ---------------------------------------------------------------------------------
 (3) _send_4_bit_command                                   4     1      3   19148
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
                  _send_4_bit_enable
                    _send_4_bit_help
 ---------------------------------------------------------------------------------
 (3) _send_4_bit_help                                      4     1      3    6029
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _send_4_bit_enable                                    3     1      2    5591
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _Led_initialize                                       5     3      2    6938
                                             14 COMRAM     4     2      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   4     2      2    6574
                                             10 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Led_Turn_On                                          5     3      2    5551
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Led_Turn_Off                                         5     3      2    5551
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    5195
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Led_Turn_Off
     _gpio_pin_write_logic
   _Led_Turn_On
     _gpio_pin_write_logic
   ___awdiv
   ___awmod
   _application_initialize
     _Led_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _gpio_pin_direction_intialize
     _lcd_pins_4_initialize
       _gpio_pin_intialize
       _send_4_bit_command
         _gpio_pin_write_logic
         _send_4_bit_enable
           _gpio_pin_write_logic
         _send_4_bit_help
           _gpio_pin_write_logic
     _segment_pin_initialize
       _gpio_pin_intialize
   _gpio_pin_write_logic
   _segment_write_number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_pin_write_logic (ARG)
   _send_4_bit_string_data_pos
     _lcd_4_bit_set_cursor
       _send_4_bit_command
     _send_4_bit_char_data
       _gpio_pin_write_logic
       _send_4_bit_enable
       _send_4_bit_help

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     24      6D       1       85.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D      39        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Oct 12 17:23:51 2023

                    _send_4_bit_command 1B80                                       l9 1DE2  
                                     _x 0068                      ?_send_4_bit_enable 0038  
    __end_of_send_4_bit_string_data_pos 1D3A              _send_4_bit_string_data_pos 1CD0  
                                    l14 1A20                                      l50 1BF0  
                                    l60 1E30                                      l45 15C6  
                                    l55 1B7E                                      l81 1D38  
                                    l92 17AC                                      l86 19AA  
                                    l98 17AE                  ?_lcd_pins_4_initialize 0040  
                          ___awdiv@sign 0033                     ?_send_4_bit_command 003C  
                  _lcd_4_bit_set_cursor 16E6                                     l210 1C08  
                                   l300 16E4                                     l221 1A96  
                                   l214 1C62                                     l224 1AAE  
                                   l217 1A38                                     l321 1CCE  
                                   l401 137C                                     l228 1B0C  
                                   l282 14A6                                     l419 1D8E  
                                   l277 14A4                                     l295 16E2  
                                   l653 1872                                     l666 1922  
                   ??_send_4_bit_enable 003A                            ___awmod@sign 0033  
                                   prod 0FF3                                     wreg 0FE8  
                      ??_Led_initialize 003E                                    l2000 15DE  
                                  l2002 1600                                    l2004 1608  
                                  l2020 1936                                    l2006 1618  
                                  l2030 1DE4                                    l2022 193E  
                                  l2008 1674                                    l2032 1DF6  
                                  l2024 19A8                                    l2016 1924  
                                  l2200 16FE                                    l2034 1DFE  
                                  l2018 1924                                    l2130 1D90  
                                  l2210 1758                                    l2202 1706  
                                  l2060 139A                                    l2036 1E12  
                                  l2028 1DE4                                    l2140 14A8  
                                  l2132 1DA2                                    l2212 176A  
                                  l2204 1716                                    l2062 13BC  
                                  l2038 1E2E                                    l2142 14BA  
                                  l2134 1DA6                                    l2214 1782  
                                  l2206 172E                                    l2310 1CD0  
                                  l2400 1846                                    l2064 13C4  
                                  l2056 1384                                    l2080 1C76  
                                  l2160 1520                                    l2152 14E2  
                                  l2144 14BE                                    l2128 1D90  
                                  l2216 1794                                    l2208 1740  
                                  l2320 1D18                                    l2312 1CD0  
                                  l2402 184C                                    l2066 13DA  
                                  l2058 1388                                    l2082 1C98  
                                  l2090 1B80                                    l2170 1576  
                                  l2162 1530                                    l2154 14FE  
                                  l2146 14DE                                    l2138 14A8  
                                  l2218 17AC                                    l2322 1D1C  
                                  l2314 1CE2                                    l2340 1A3C  
                                  l2404 1852                                    l2420 1892  
                                  l2412 1874                                    l2068 143C  
                                  l2084 1CA0                                    l2076 1C64  
                                  l2092 1B80                                    l2172 1586  
                                  l2164 1550                                    l2156 1500  
                                  l2316 1CE6                                    l2350 1A98  
                                  l2342 1A72                                    l2334 1A22  
                                  l2406 1862                                    l2430 18CA  
                                  l2422 18A0                                    l2414 1878  
                                  l2086 1CCC                                    l2078 1C64  
                                  l2094 1B92                                    l2174 1596  
                                  l2166 1556                                    l2158 1510  
                                  l2190 1B7C                                    l2182 1B0E  
                                  l2318 1CFE                                    l2360 1AEA  
                                  l2352 1A98                                    l2344 1A74  
                                  l2336 1A22                                    l2408 186A  
                                  l2432 18D8                                    l2440 1902  
                                  l2424 18A8                                    l2416 1886  
                                  l2280 1C0C                                    l2096 1B9A  
                                  l2176 15A6                                    l2168 1566  
                                  l2184 1B0E                                    l2600 1056  
                                  l2362 1AFC                                    l2354 1AAA  
                                  l2346 1A86                                    l2338 1A34  
                                  l2370 17B4                                    l2442 1912  
                                  l2434 18EE                                    l2426 18BA  
                                  l2418 188E                                    l2282 1C42  
                                  l2274 1BF2                                    l2098 1BEE  
                                  l2178 15B6                                    l2290 19AC  
                                  l2194 16E6                                    l2186 1B20  
                                  l2610 10A8                                    l2602 1072  
                                  l2356 1AB2                                    l2380 17E4  
                                  l2372 17C2                                    l2444 191A  
                                  l2436 18F6                                    l2428 18C2  
                                  l2284 1C44                                    l2276 1BF2  
                                  l2292 19AC                                    l2196 16EA  
                                  l2188 1B28                                    l2700 135A  
                                  l2620 1116                                    l2612 10B6  
                                  l2358 1AE8                                    l2390 1812  
                                  l2382 17E8                                    l2374 17CA  
                                  l2438 18FC                                    l2286 1C56  
                                  l2278 1C04                                    l2366 1D3A  
                                  l2294 19BE                                    l2198 16EC  
                                  l2702 135C                                    l2622 1118  
                                  l2614 10C6                                    l2630 1142  
                                  l2392 1820                                    l2384 17F0  
                                  l2376 17CE                                    l2368 17B0  
                                  l2296 19C2                                    l2704 136C  
                                  l2640 116E                                    l2632 1152  
                                  l2624 1128                                    l2616 10E8  
                                  l2608 1076                                    l2394 1826  
                                  l2386 1802                                    l2378 17DC  
                                  l2650 11C0                                    l2642 118A  
                                  l2626 112C                                    l2618 1106  
                                  l2396 183C                                    l2388 180A  
                                  l2708 1374                                    l2660 122E  
                                  l2652 11CE                                    l2628 113A  
                                  l2580 101A                                    l2398 1844  
                                  l2662 1230                                    l2654 11DE  
                                  l2638 1156                                    l2670 125A  
                                  l2590 102A                                    l2582 101A  
                                  l2680 129A                                    l2672 126C  
                                  l2664 1240                                    l2656 1200  
                                  l2648 118E                                    l2592 103A  
                                  l2584 101E                                    l2690 12EC  
                                  l2682 12B6                                    l2674 1270  
                                  l2666 1244                                    l2658 121E  
                                  l2586 1022                                    l2692 12FA  
                                  l2668 1252                                    l2588 1026  
                                  l2694 130A                                    l2678 1282  
                                  l2598 103E                                    l2696 132C  
                                  l2688 12BA                                    l2698 134A  
                                  l1996 15C8                                    l1998 15CC  
                                  STR_1 1016                                    STR_4 1011  
                                  STR_5 1009                                    STR_6 1001  
                                  u1100 15DE                                    u1101 15DA  
                                  u1110 1600                                    u1111 15FC  
                                  u1120 1618                                    u1200 13BC  
                                  u1121 1614                                    u1201 13B8  
                                  u1210 13DA                                    u1211 13D6  
                                  u1150 16E2                                    u1134 1638  
                                  u1310 1DA2                                    u1151 16DE  
                                  u1135 1634                                    u2007 1552  
                                  u1311 1D9E                                    u1144 1694  
                                  u1240 14A4                                    u1224 13FA  
                                  u1160 1936                                    u1320 14BA  
                                  u1145 1690                                    u1241 14A0  
                                  u1225 13F6                                    u1161 1932  
                                  u1321 14B6                                    u1234 145C  
                                  u1250 1C76                                    u1170 1DF6  
                                  u1330 1510                                    u1235 1458  
                                  u1251 1C72                                    u1171 1DF2  
                                  u1331 150C                                    u1260 1C98  
                                  u1500 19BE                                    u1340 1B20  
                                  u1261 1C94                                    u1501 19BA  
                                  u1341 1B1C                                    _LATA 0F89  
                                  u1190 139A                                    u1270 1B92  
                                  u1350 16FE                                    _LATB 0F8A  
                                  u1191 1396                                    u1271 1B8E  
                                  u1351 16FA                                    _LATC 0F8B  
                                  u1600 17DC                                    u1360 1716  
                                  u1520 1CE2                                    _LATD 0F8C  
                                  u1601 17D8                                    u1361 1712  
                                  u1521 1CDE                                    _LATE 0F8D  
                                  u1610 1802                                    u1370 1740  
                                  u1530 1D38                                    u1611 17FE  
                                  u1371 173C                                    u1531 1D34  
                                  u1620 1820                                    u1700 1912  
                                  u1380 176A                                    u1621 181C  
                                  u1701 190E                                    u1381 1766  
                                  u1550 1A34                                    u1630 183C  
                                  u1390 1794                                    u1551 1A30  
                                  u1631 1838                                    u1391 1790  
                                  u1640 1862                                    u1480 1C04  
                                  u1641 185E                                    u1481 1C00  
                                  u1570 1AAA                                    u1650 1886  
                                  u1571 1AA6                                    u1651 1882  
                                  u1660 18A0                                    u1900 127E  
                                  u1565 1A84                                    u1661 189C  
                                  u1901 127A                                    u1590 17C2  
                                  u1670 18BA                                    u1910 136C  
                                  u1830 103A                                    u1567 1A86  
                                  u1591 17BE                                    u1671 18B6  
                                  u1495 1C54                                    u1911 1368  
                                  u1831 1036                                    u1680 18D8  
                                  u1840 1128                                    u1585 1AFA  
                                  u1681 18D4                                    u1497 1C56  
                                  u1841 1124                                    u1690 18EE  
                                  u1850 113A                                    u1587 1AFC  
                                  u1691 18EA                                    u1851 1136  
                                  u1860 1152                                    u1861 114E  
                                  u1870 1240                                    u1871 123C  
                                  u1927 10AE                                    u1880 1252  
                                  u1881 124E                                    u1937 10FE  
                                  u1890 126C                                    u1891 1268  
                                  u1947 11C6                                    u1957 1216  
                                  u1967 12F2                                    u1977 1342  
                                  u1987 1516                                    u1997 1536  
                 ?_send_4_bit_char_data 003C                    ??_send_4_bit_command 003F  
                                  _main 101A                                    fsr2h 0FDA  
                                  indf2 0FDF                                    fsr1l 0FE1  
                                  fsr2l 0FD9                                    prodl 0FF3  
             __end_of_send_4_bit_enable 1E32                                    start 0000  
                          ___param_bank 0000                     __end_of_Led_Turn_On 1A98  
                  _gpio_pin_write_logic 15C8                   ?_lcd_4_bit_set_cursor 0040  
                                 ?_main 002E                ??_application_initialize 0046  
                       __end_of___awdiv 1874                         __end_of___awmod 1924  
                       ___awdiv@divisor 0030                         ___awdiv@counter 0032  
                                 _PORTA 0F80                                   _PORTB 0F81  
                                 _PORTC 0F82                                   _PORTD 0F83  
                                 _PORTE 0F84                                   _TRISA 0F92  
                                 _TRISB 0F93                                   _TRISC 0F94  
                                 _TRISD 0F95                                   _TRISE 0F96  
                                 main@G 0050                                   main@R 004F  
                                 main@Y 0051                                   main@i 004C  
                                 tablat 0FF5                      Led_Turn_On@led_pin 003B  
               __end_of_send_4_bit_help 19AC                                   status 0FD8  
                       __initialization 1E32                            __end_of_main 1384  
                 ?_gpio_pin_write_logic 002E                         Led_Turn_Off@led 0038  
                  __end_of_Led_Turn_Off 1B0E                                  ??_main 004B  
                         __activetblptr 0001                ??_segment_pin_initialize 003E  
      send_4_bit_string_data_pos@column 0048                        ___awdiv@dividend 002E  
                ??_send_4_bit_char_data 003F                             _Led_Turn_On 1A22  
                 send_4_bit_command@lcd 003C                   send_4_bit_command@ret 003F  
                             ??___awdiv 0032                               ??___awmod 0032  
                ??_lcd_4_bit_set_cursor 0044                                  clear_0 1E58  
                      ___awdiv@quotient 0034                         ___awmod@divisor 0030  
                                isa$std 0001                         ___awmod@counter 0032  
                          __pdataCOMRAM 0001                            __mediumconst 0000  
                                tblptrh 0FF7                                  tblptrl 0FF6  
                                tblptru 0FF8                     Led_Turn_Off@led_pin 003B  
                            __accesstop 0080                 __end_of__initialization 1E5E  
                      ?_send_4_bit_help 0038                        Led_Turn_On@F3053 006B  
                         ___rparam_used 0001                  ??_gpio_pin_write_logic 0031  
               ??_lcd_pins_4_initialize 0042                          __pcstackCOMRAM 002E  
              lcd_pins_4_initialize@lcd 0040                lcd_pins_4_initialize@ret 0044  
           ?_send_4_bit_string_data_pos 0045                  _application_initialize 1D3A  
               send_4_bit_char_data@lcd 003C                 send_4_bit_char_data@ret 003F  
        gpio_pin_write_logic@Pin_Config 002E                            _Led_Turn_Off 1A98  
                            _led_yellow 002D                  _segment_pin_initialize 1D90  
                               __Hparam 0000            lcd_pins_4_initialize@cnt_pin 0045  
                               __Lparam 0000                                 ___awdiv 17B0  
                               ___awmod 1874                            __psmallconst 1000  
            __end_of_gpio_pin_intialize 1CD0                                 __pcinit 1E32  
                               __ramtop 1000                                 __ptext0 101A  
                               __ptext1 1CD0                                 __ptext2 1B0E  
                               __ptext3 16E6                                 __ptext4 19AC  
                               __ptext5 1D3A                                 __ptext6 1D90  
                               __ptext7 14A8                                 __ptext8 1B80  
                               __ptext9 1924                                 _led_red 002C  
                               _lat_reg 000B                                 _t_delay 0067  
                      ___awmod@dividend 002E                    end_of_initialization 1E5E  
                          ?_Led_Turn_On 0038                   gpio_pin_intialize@ret 003B  
                               postdec1 0FE5                                 postdec2 0FDD  
                               postinc0 0FEE                                 postinc2 0FDE  
  __end_of_gpio_pin_direction_intialize 14A8            _gpio_pin_direction_intialize 1384  
         segment_pin_initialize@segment 003C                       Led_Turn_Off@F3058 006A  
        send_4_bit_string_data_pos@data 0049           __end_of_lcd_pins_4_initialize 15C8  
                         __pidataCOMRAM 1E6C                     start_initialization 1E32  
                        Led_Turn_On@led 0038           ?_gpio_pin_direction_intialize 002E  
          gpio_pin_intialize@Pin_Config 0038                    send_4_bit_enable@lcd 0038  
                  send_4_bit_enable@ret 003A                 ?_application_initialize 002E  
          __end_of_segment_write_number 1A22            cnvert_uint16_to_string@F3221 005D  
          cnvert_uint32_to_string@F3228 0052                             __pbssCOMRAM 0052  
        __end_of_application_initialize 1D90  gpio_pin_direction_intialize@Pin_Config 002E  
                    send_4_bit_help@lcd 0038                      send_4_bit_help@ret 003B  
               ?_segment_pin_initialize 003C               send_4_bit_command@command 003E  
       gpio_pin_direction_intialize@ret 0036                          _Led_initialize 1BF2  
                              ?___awdiv 002E                                ?___awmod 002E  
             gpio_pin_write_logic@logic 0030                               _led_green 006D  
                   Led_initialize@F3048 006C                             __smallconst 1000  
           send_4_bit_help@data_command 003A                      _gpio_pin_intialize 1C64  
        __end_of_segment_pin_initialize 1DE4                send_4_bit_char_data@data 003E  
            __end_of_send_4_bit_command 1BF2          ??_gpio_pin_direction_intialize 0030  
                __end_of_Led_initialize 1C64                     ?_gpio_pin_intialize 0038  
                             _segment_1 0025                               main@i_661 004E  
                             main@i_659 004D                    ??_gpio_pin_intialize 003A  
                     ??_send_4_bit_help 003B                    _segment_write_number 19AC  
               segment_write_number@num 003A           send_4_bit_string_data_pos@lcd 0045  
         send_4_bit_string_data_pos@row 0047                 gpio_pin_write_logic@ret 0037  
                             copy_data0 1E46                         ?_Led_initialize 003C  
                              __Hrparam 0000                                __Lrparam 0000  
                          __Lsmallconst 1000            ??_send_4_bit_string_data_pos 004B  
          __end_of_send_4_bit_char_data 1B80                   ?_segment_write_number 0038  
           segment_write_number@segment 0038                                _lcd_4bit 001F  
                              __ptext10 1DE4                                __ptext11 1BF2  
                              __ptext12 1C64                                __ptext13 1384  
                              __ptext14 1874                                __ptext15 17B0  
                              __ptext16 1A22                                __ptext17 1A98  
                              __ptext18 15C8                   Led_initialize@led_pin 003F  
          __end_of_lcd_4_bit_set_cursor 17B0             cnvert_uint8_to_string@F3214 0063  
                              isa$xinst 0000                                _port_reg 0001  
                              _tris_reg 0015                   _lcd_pins_4_initialize 14A8  
               lcd_4_bit_set_cursor@lcd 0040                 lcd_4_bit_set_cursor@ret 0044  
               lcd_4_bit_set_cursor@row 0042            __end_of_gpio_pin_write_logic 16E6  
                         ?_Led_Turn_Off 0038              lcd_4_bit_set_cursor@column 0043  
                     Led_initialize@led 003C                         Led_Toggle@F3063 0069  
                ??_segment_write_number 003B                          ??_Led_Turn_Off 003A  
                         ??_Led_Turn_On 003A                    _send_4_bit_char_data 1B0E  
                      _segment_enable_1 002B                        _segment_enable_2 002A  
                     _send_4_bit_enable 1DE4                         _send_4_bit_help 1924  
